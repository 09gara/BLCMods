#<{mod_name} ({config:profile_name} - {variant_name})>

    # {mod_name} v{mod_version} - {config:profile_name}, {variant_name}
    # Licensed under Public Domain / CC0 1.0 Universal

{hotfix_gearbox_base}

    #<Loot Pool Tweaks>

        #<Uniques in Legendary Pool>

            # Puts all unique weapons (and all DLC Legendaries as well) into the global
            # Legendary loot pools.

            #<Weapons>

                set GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.AR_Bandit_5_Fusillade', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Legendary.AR_Jakobs_5_HammerBreaker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Legendary.AR_Torgue_5_KerBoom', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Legendary.AR_Dahl_5_MajorTom', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Legendary.AR_Vladof_5_Shredifier', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cypressure_Weapons.A_Weapons_Unique.AR_Bandit_3_BossNova', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.AssaultRifles.AR_Bandit_3_CryBaby', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Unique.AR_Vladof_3_Hail', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Unique.AR_Vladof_3_IceScream', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Unique.AR_Vladof_3_OldPainful', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Unique.AR_Jakobs_3_Wallop', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Maliwan_5_FusionBeam', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Dahl_5_Ricochet', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Old_Hyperion_5_Excalibastard', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Tediore_5_LaserDisker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Hyperion_5_LongestYard', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Tediore_5_Tesla', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Maliwan_5_Thunderfire', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Dahl_5_ZX1', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Laser_Dahl_6_Glitch_HeartfullSplodger', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_4_SavorySideSaber', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_4_Egun', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Dahl_3_Firestarta', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_3_Blizzard', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Laser_Maliwan_3_Minac', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Hyperion_3_Mining', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_4_Rosie', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Laser_Maliwan_3_Enlightenment', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Tediore_3_Vandergraffen', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_3_VibraPulse', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Torgue_5_88Fragnum', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Dahl_5_Blowfly', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Weap_Pistol.A_Weapons_Legendary.Pistol_Hyperion_5_LogansGun', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Pistol_Jakobs_5_LuckCannon', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Jakobs_5_Maggie', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Pistol_Vladof_5_Expander', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Tediore_5_Shooterang', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Bandit_5_Zim', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Jakobs_CyberColt', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Hyperion_3_Fibber', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Hyperion_3_Globber', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Dahl_3_GwensOtherHead', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Pistol_Maliwan_3_HardReboot', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Hyperion_3_LadyFist', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Pistol_Bandit_3_PartyPopper', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Maliwan_3_Moxxis_Probe', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Jakobs_3_Smasher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.Pistols.Pistol_Hyperion_3_T4sr', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_Launchers_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Bandit_5_BadaBoom', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.Launchers.RL_Vladof_5_Menace', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Maliwan_5_Cryophobia', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.RL_Tediore_5_KanedasLaser', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Vladof_5_Mongol', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Torgue_5_Nukem', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Bandit_5_Thingy', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Unique.RL_Torgue_3_Creamer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Unique.RL_Tediore_3_Rocketeer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Legendary.SG_Torgue_5_Flakker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.SG_Jakobs_5_Flayer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Legendary.SG_Bandit_5_SledgesShotgun', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Legendary.SG_Jakobs_5_Striker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Legendary.SG_Hyperion_5_ConferenceCall', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Bandit_3_Boganella', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Jakobs_Boomacorn', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Old_Hyperion_3_Bullpup', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cypressure_Weapons.A_Weapons_Unique.SG_Hyperion_3_CompanyMan',
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Torgue_3_JackOCannon', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Jakobs_3_Moonface', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cypressure_Weapons.A_Weapons_Unique.SG_Torgue_3_Landscaper2', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Tediore_3_Octo', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.Shotguns.SG_Tediore_3_PartyLine', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Jakobs_TooScoops', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Torgue_3_Torguemada', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Torgue_3_Wombat', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_SMG_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.SMG_Hyperion_5_CheatCode', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Legendary.SMG_Hyperion_5_Bitch', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Legendary.SMG_Maliwan_5_HellFire', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Legendary.SMG_Tediore_5_IVF', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Legendary.SMG_Dahl_5_Torrent', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Maliwan_3_BadTouch', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Old_Hyperion_BlackSnake', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.SMGs.SMG_Tediore_3_Boxxy', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.SMG_Bandit_6_Glitch_CutieKiller', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cypressure_Weapons.A_Weapons_Unique.SMG_Bandit_3_FastTalker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Weap_SMG.A_Weapons_Unique.SMG_Dahl_3_Fridgia', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Weap_SMG.A_Weapons_Unique.SMG_Maliwan_3_Frostfire', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Maliwan_3_GoodTouch', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Bandit_3_MareksMouth', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Bandit_3_MeatGrinder', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Hyperion_5_Invader', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Vladof_5_Longnail', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Maliwan_5_Magma', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Sniper_Old_Hyperion_5_OmniCannon', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Dahl_5_Pitchfork', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Jakobs_5_Skullmasher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Unique.Sniper_Maliwan_3_ChereAmie', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Weap_SniperRifles.A_Weapons_Unique.Sniper_Hyperion_3_FremingtonsEdge', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Unique.Sniper_Vladof_3_TheMachine', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.Snipers.Sniper_Jakobs_3_Plunkett', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Unique.Sniper_Jakobs_3_Razorback', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Unique.Sniper_Dahl_3_WetWeek', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Weapons>

            #<Class Mods>

                set GD_Itempools.ClassModPools.Pool_ClassMod_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Crocus_ItemGrades.ClassMods.BalDef_ClassMod_Baroness_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Quince_ItemGrades.ClassMods.BalDef_ClassMod_Doppelganger_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Enforcer_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Prototype_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Gladiator_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Lawbringer_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Crocus_ItemGrades.ClassMods.BalDef_ClassMod_Baroness_07_ChroniclerOfElpis', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Doppel_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Enforcer_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Gladiator_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Lawbringer_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Prototype_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Enforcer_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Gladiator_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Lawbringer_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Prototype_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Crocus_ItemGrades.ClassMods.BalDef_ClassMod_Baroness_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Quince_ItemGrades.ClassMods.BalDef_ClassMod_Doppelganger_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Class Mods>

            #<Grenade Mods>

                set GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_GrenadeMods.A_Item_Legendary.GM_BonusPackage', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_BouncingBonny', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_FireBee', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_FourSeasons', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_Leech', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_GrenadeMods.A_Item_Legendary.GM_Meganade', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_NastySurprise', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_Pandemic', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_GrenadeMods.A_Item_Legendary.GM_Quasar', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_RollingThunder', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_StormFront', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Custom.GM_BabyBoomer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_GrenadeMods.A_Item_Unique.GM_DataScrubber', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_GrenadeMods.A_Item_Custom.GM_KissOfDeath', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Custom.GM_Snowball', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Custom.GM_SkyRocket',
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=0.050000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Grenade Mods>

            #<Oz Kits>

                set GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Astrotech', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_AckAck', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_MoonlightSaga', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Oxidizer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_SupportRelay', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Poopdeck', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Freedom', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Invigoration', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Pet_MoonItems.A_Item_Unique.A_AntiAir_PerdyLights', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_SystemsPurge', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Oz Kits>

            #<Shields>

                # Some shield pools already had everything I'd want them to have, namely:
                #  * GD_Itempools.ShieldPools.Pool_Shields_Absorption_06_Legendary
                #  * GD_Itempools.ShieldPools.Pool_Shields_Roid_06_Legendary

                set GD_Itempools.ShieldPools.Pool_Shields_Booster_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Booster_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Booster_AsteroidBelt', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Booster_MoxxisSlammer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_Chimera_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_Shields.A_Item_Legendary.ItemGrade_Gear_Shield_Chimera_05_M0RQ', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Chimera_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Chimera_Haymaker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_Impact_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_Shields.A_Item_Legendary.ItemGrade_Gear_Shield_Impact_05_Rerouter',
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_Juggernaut_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Juggernaut_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_Shields.A_Item_Unique.ItemGrade_Gear_Shield_Juggernaut_03_ShieldOfAges', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_NovaShields_All_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Nova_Singularity', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Nova_Supernova', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_NovaShields_Explosive_06_Legendary', 
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Nova_Starburst', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_Shields.A_Item_Custom.ItemGrade_Shield_RapidRelease',
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_SpikeShields_All_06_Legendary BalancedItems
                (
                    ( 
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_SpikeShields_Corrosive_06_Legendary',
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None, 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_Standard_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Standard_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_Shields.A_Item_Unique.ItemGrade_Gear_Shield_Naught', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                #<Normalize Legendary Shield Probabilities>

                    # Makes sure that the main legendary shield pool weights the various
                    # sub-pools such that there's a roughly equal chance for any of the
                    # shields in here.

                    set GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary BalancedItems
                    (
                        ( 
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Standard_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=2.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_NovaShields_All_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=5.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Roid_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=3.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_SpikeShields_All_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Juggernaut_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=2.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Booster_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=3.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Absorption_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=3.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Chimera_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=3.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Impact_06_Legendary',
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            bDropOnDeath=True 
                        )
                    )

                #</Normalize Legendary Shield Probabilities>

            #</Shields>

        #</Uniques in Legendary Pool>

        #<Luneshine Drops>

            #<Enable Luneshine in World Drops (Duplicate of UCP)>

                # Enables Luneshine in world drops.  This section is a duplicate of the
                # UCP section which does the same thing.

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Boominator PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_None PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Serenity PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_FastLearner PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Punisher PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_PiercingRounds PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Oxygenator PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Safeguard PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_HardenUp PartSubType WPS_Normal

            #</Enable Luneshine in World Drops (Duplicate of UCP)>

            #<Guaranteed Luneshine for Legendaries and Uniques>

                # Guarantee that all legendaries + uniques which support Luneshine will
                # always spawn with Luneshine

                {hotfixes:guaranteed_luneshine_0}

                {hotfixes:guaranteed_luneshine_1}

                {hotfixes:guaranteed_luneshine_2}

                {hotfixes:guaranteed_luneshine_3}

                {hotfixes:guaranteed_luneshine_4}

                {hotfixes:guaranteed_luneshine_5}

                {hotfixes:guaranteed_luneshine_6}

                {hotfixes:guaranteed_luneshine_7}

                {hotfixes:guaranteed_luneshine_8}

                {hotfixes:guaranteed_luneshine_9}

                {hotfixes:guaranteed_luneshine_10}

                {hotfixes:guaranteed_luneshine_11}

                {hotfixes:guaranteed_luneshine_12}

                {hotfixes:guaranteed_luneshine_13}

                {hotfixes:guaranteed_luneshine_14}

                {hotfixes:guaranteed_luneshine_15}

                {hotfixes:guaranteed_luneshine_16}

                {hotfixes:guaranteed_luneshine_17}

                {hotfixes:guaranteed_luneshine_18}

                {hotfixes:guaranteed_luneshine_19}

                {hotfixes:guaranteed_luneshine_20}

                {hotfixes:guaranteed_luneshine_21}

                {hotfixes:guaranteed_luneshine_22}

                {hotfixes:guaranteed_luneshine_23}

                {hotfixes:guaranteed_luneshine_24}

                {hotfixes:guaranteed_luneshine_25}

                {hotfixes:guaranteed_luneshine_26}

                {hotfixes:guaranteed_luneshine_27}

                {hotfixes:guaranteed_luneshine_28}

                {hotfixes:guaranteed_luneshine_29}

                {hotfixes:guaranteed_luneshine_30}

                {hotfixes:guaranteed_luneshine_31}

                {hotfixes:guaranteed_luneshine_32}

                {hotfixes:guaranteed_luneshine_33}

                {hotfixes:guaranteed_luneshine_34}

                {hotfixes:guaranteed_luneshine_35}

                {hotfixes:guaranteed_luneshine_36}

                {hotfixes:guaranteed_luneshine_37}

                {hotfixes:guaranteed_luneshine_38}

                {hotfixes:guaranteed_luneshine_39}

                {hotfixes:guaranteed_luneshine_40}

                {hotfixes:guaranteed_luneshine_41}

                {hotfixes:guaranteed_luneshine_42}

                {hotfixes:guaranteed_luneshine_43}

                {hotfixes:guaranteed_luneshine_44}

                {hotfixes:guaranteed_luneshine_45}

                {hotfixes:guaranteed_luneshine_46}

                {hotfixes:guaranteed_luneshine_47}

                {hotfixes:guaranteed_luneshine_48}

                {hotfixes:guaranteed_luneshine_49}

                {hotfixes:guaranteed_luneshine_50}

                {hotfixes:guaranteed_luneshine_51}

                {hotfixes:guaranteed_luneshine_52}

                {hotfixes:guaranteed_luneshine_53}

                {hotfixes:guaranteed_luneshine_54}

                {hotfixes:guaranteed_luneshine_55}

                {hotfixes:guaranteed_luneshine_56}

                {hotfixes:guaranteed_luneshine_57}

                {hotfixes:guaranteed_luneshine_58}

                {hotfixes:guaranteed_luneshine_59}

                {hotfixes:guaranteed_luneshine_60}

                {hotfixes:guaranteed_luneshine_61}

                {hotfixes:guaranteed_luneshine_62}

                {hotfixes:guaranteed_luneshine_63}

                {hotfixes:guaranteed_luneshine_64}

                {hotfixes:guaranteed_luneshine_65}

                {hotfixes:guaranteed_luneshine_66}

                {hotfixes:guaranteed_luneshine_67}

                {hotfixes:guaranteed_luneshine_68}

                {hotfixes:guaranteed_luneshine_69}

                {hotfixes:guaranteed_luneshine_70}

                {hotfixes:guaranteed_luneshine_71}

                {hotfixes:guaranteed_luneshine_72}

                {hotfixes:guaranteed_luneshine_73}

                {hotfixes:guaranteed_luneshine_74}

                {hotfixes:guaranteed_luneshine_75}

                {hotfixes:guaranteed_luneshine_76}

                {hotfixes:guaranteed_luneshine_77}

                {hotfixes:guaranteed_luneshine_78}

                {hotfixes:guaranteed_luneshine_79}

                {hotfixes:guaranteed_luneshine_80}

                {hotfixes:guaranteed_luneshine_81}

                {hotfixes:guaranteed_luneshine_82}

                {hotfixes:guaranteed_luneshine_83}

                {hotfixes:guaranteed_luneshine_84}

            #</Guaranteed Luneshine for Legendaries and Uniques>

        #</Luneshine Drops>

        #<Better Weapon Drops>

            set GD_Itempools.WeaponPools.Pool_Weapons_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Weapon Drops>

        #<Better Oz Kit Drops>

            set GD_Itempools.MoonItemPools.Pool_MoonItem_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_common}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_uncommon}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_rare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_veryrare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_legendary}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Oz Kit Drops>

        #<Better Class Mods>

            set GD_Itempools.ClassModPools.Pool_ClassMod_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Class Mods>

        #<Better Grenade Mods>

            set GD_Itempools.GrenadeModPools.Pool_GrenadeMods_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Grenade Mods>

        #<Better Shields>

            set GD_Itempools.ShieldPools.Pool_Shields_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Shields>

    #</Loot Pool Tweaks>

    #<Currency Drop Improvements>

        #<More Frequent Moonstone>

            # Makes Moonstone drop a little more frequently

            set GD_Itempools.DropWeights.DropODDS_Moonstone:ConstantAttributeValueResolver_1 ConstantValue {config:moonstone_drop}

            set GD_Itempools.DropWeights.DropODDS_MoonstoneCluster:ConstantAttributeValueResolver_1 ConstantValue {config:moonstone_cluster_drop}

        #</More Frequent Moonstone>

    #</Currency Drop Improvements>

    #<Better Containers>

        #<Better Epic Chests>

            # Improves loot from "Epic" chests in the game

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_AssaultRifles_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Shotguns_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_SMG_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Sniper_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Lasers_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_Pistols BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Pistols_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_Launchers BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Launchers_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Items BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Shields BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_GrenadeMods BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_ClassMods BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_MoonItems BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Epic Chests>

        #<Better Glitched Epic Chests>

            # Improves Glitched Epic chests.  These will be nearly identical to their
            # usual Epic components, but with a better chance for Glitch weaponry.
            #
            # Also, there are two sets of pools in here which are used by glitch chests,
            # one with "Epic" twice in the name, and one with "Epic" only the once.
            # The differences between them in the stock versions are very slight.  I'm
            # setting them both to be equal in here.

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns_Epic_Marigold BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_AssaultRifles_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Shotguns_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_SMG_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Sniper_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Lasers_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Pistols_Epic_Marigold BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Pistols_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Launchers_Epic_Marigold BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Launchers_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns_Marigold BalancedItems
            (
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns_Epic_Marigold',
                    InvBalanceDefinition=None,
                    Probability=( 
                        BaseValueConstant=1.000000,
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Pistols_Marigold BalancedItems
            (
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Pistols_Epic_Marigold',
                    InvBalanceDefinition=None,
                    Probability=( 
                        BaseValueConstant=1.000000,
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Launchers_Marigold BalancedItems
            (
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Launchers_Epic_Marigold',
                    InvBalanceDefinition=None,
                    Probability=( 
                        BaseValueConstant=1.000000,
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Glitched Epic Chests>

        #<Fix Broken Shield Pools>

            # Various chests in the game have a possible "Shields" item pool which will
            # never actually trigger in-game because they include an invalid item in the
            # pool.  This fixes the pool so that it can be chosen again.

            {hotfixes:euphoria_fix_0}

            {hotfixes:euphoria_fix_1}

            {hotfixes:euphoria_fix_2}

            {hotfixes:euphoria_fix_3}

            {hotfixes:euphoria_fix_4}

            {hotfixes:euphoria_fix_5}

        #</Fix Broken Shield Pools>

    #</Better Containers>

    #<Better Enemy Drops>

        #<Guaranteed Boss Drops>

            # Bosses should always drop their unique items

            set GD_Itempools.DropWeights.DropODDs_BossUniques:ConstantAttributeValueResolver_0 ConstantValue 10

            set GD_Itempools.DropWeights.DropODDs_BossUniqueRares:ConstantAttributeValueResolver_0 ConstantValue 10

        #</Guaranteed Boss Drops>

    #</Better Enemy Drops>

    #<Remove Level-Based Loot Restrictions>

        # This probably overlaps with UCP a bit.

        #<Main Unlocks>

            set GD_Itempools.Scheduling.Gamestage_02:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_03:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_04:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_05:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_06:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_07:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_08:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_09:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_10:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_11:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_12:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_13:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_14:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_15:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_16:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_17:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_18:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_19:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_20:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_21:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_22:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_23:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_24:ConstantAttributeValueResolver_0 ConstantValue 1

        #</Main Unlocks>

        #<Class Mods>

            # Class mods apparently have a separate set of values to override.

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_01_Common:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_02_Uncommon:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_03_Rare:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_04_VeryRare:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_05_Legendary:ConstantAttributeValueResolver_0 ConstantValue 1

        #</Class Mods>

    #</Remove Level-Based Loot Restrictions>

    #<Volatile Changes - May create items which disappear if this mod is not active!>

        #<Luneshine Overrides>

            # Several unique weapons don't actually have any Luneshine attachments
            # specified at all.  This fixes those, and makes sure that it's a
            # guaranteed attachment.

            {hotfixes:luneshine_override_0}

            {hotfixes:luneshine_override_1}

            {hotfixes:luneshine_override_2}

            {hotfixes:luneshine_override_3}

            {hotfixes:luneshine_override_4}

            {hotfixes:luneshine_override_5}

            {hotfixes:luneshine_override_6}

            {hotfixes:luneshine_override_7}

            {hotfixes:luneshine_override_8}

            {hotfixes:luneshine_override_9}

            {hotfixes:luneshine_override_10}

        #</Luneshine Overrides>

    #</Volatile Changes - May create items which disappear if this mod is not active!>

{test_drop_chance_str}
{test_drop_quantity_str}
{gunsandgear_drop_str}

#</{mod_name} ({config:profile_name} - {variant_name})>

{hotfix_transient_defs}

