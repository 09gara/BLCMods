TPS
#<{mod_name} ({config:profile_name} - {variant_name})>

    # {mod_name} v{mod_version} - {config:profile_name}, {variant_name}
    # Licensed under Public Domain / CC0 1.0 Universal

    #<Loot Pool Tweaks>

        #<Normalize Gun Type Drops>

            # In the vanilla game, pistols are the most likely drop, followed by
            # ARs/SMGs/Shotguns, then snipers/lasers, and then launchers.  This
            # normalizes the probabilities for Pistols/ARs/SMGs/Shotguns, and
            # makes snipers, lasers, and launchers more likely (though still not
            # as likely as the others)

            {mp:normalize_weapon_types_Common_Pistol}

            {mp:normalize_weapon_types_Uncommon_Pistol}

            {mp:normalize_weapon_types_Rare_Pistol}

            {mp:normalize_weapon_types_VeryRare_Pistol}

            {mp:normalize_weapon_types_Legendary_Pistol}

            {mp:normalize_weapon_types_Common_AR}

            {mp:normalize_weapon_types_Uncommon_AR}

            {mp:normalize_weapon_types_Rare_AR}

            {mp:normalize_weapon_types_VeryRare_AR}

            {mp:normalize_weapon_types_Legendary_AR}

            {mp:normalize_weapon_types_Common_SMG}

            {mp:normalize_weapon_types_Uncommon_SMG}

            {mp:normalize_weapon_types_Rare_SMG}

            {mp:normalize_weapon_types_VeryRare_SMG}

            {mp:normalize_weapon_types_Legendary_SMG}

            {mp:normalize_weapon_types_Common_Shotgun}

            {mp:normalize_weapon_types_Uncommon_Shotgun}

            {mp:normalize_weapon_types_Rare_Shotgun}

            {mp:normalize_weapon_types_VeryRare_Shotgun}

            {mp:normalize_weapon_types_Legendary_Shotgun}

            {mp:normalize_weapon_types_Common_Sniper}

            {mp:normalize_weapon_types_Uncommon_Sniper}

            {mp:normalize_weapon_types_Rare_Sniper}

            {mp:normalize_weapon_types_VeryRare_Sniper}

            {mp:normalize_weapon_types_Legendary_Sniper}

            {mp:normalize_weapon_types_Common_Launcher}

            {mp:normalize_weapon_types_Uncommon_Launcher}

            {mp:normalize_weapon_types_Rare_Launcher}

            {mp:normalize_weapon_types_VeryRare_Launcher}

            {mp:normalize_weapon_types_Legendary_Launcher}

            {mp:normalize_weapon_types_Common_Laser}

            {mp:normalize_weapon_types_Uncommon_Laser}

            {mp:normalize_weapon_types_Rare_Laser}

            {mp:normalize_weapon_types_VeryRare_Laser}

            {mp:normalize_weapon_types_Legendary_Laser}

        #</Normalize Gun Type Drops>

        #<Uniques/Legendaries in Legendary Pool>

            # Puts all unique weapons (and all DLC Legendaries as well) into the global
            # Legendary loot pools.

            #<Weapons>

                set GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.AR_Bandit_5_Fusillade', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Legendary.AR_Jakobs_5_HammerBreaker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Legendary.AR_Torgue_5_KerBoom', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Legendary.AR_Dahl_5_MajorTom', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Legendary.AR_Vladof_5_Shredifier', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cypressure_Weapons.A_Weapons_Unique.AR_Bandit_3_BossNova', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.AssaultRifles.AR_Bandit_3_CryBaby', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Unique.AR_Vladof_3_Hail', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Unique.AR_Vladof_3_IceScream', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Unique.AR_Vladof_3_OldPainful', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'gd_cork_weap_assaultrifle.A_Weapons_Unique.AR_Jakobs_3_Wallop', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Maliwan_5_FusionBeam', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Dahl_5_Ricochet', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Old_Hyperion_5_Excalibastard', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Tediore_5_LaserDisker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Hyperion_5_LongestYard', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Tediore_5_Tesla', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Maliwan_5_Thunderfire', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Dahl_5_ZX1', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Laser_Dahl_6_Glitch_HeartfullSplodger', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_4_SavorySideSaber', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_4_Egun', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Dahl_3_Firestarta', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_3_Blizzard', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Laser_Maliwan_3_Minac', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Hyperion_3_Mining', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_4_Rosie', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Laser_Maliwan_3_Enlightenment', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Tediore_3_Vandergraffen', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Unique.Laser_Maliwan_3_VibraPulse', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Torgue_5_88Fragnum', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Dahl_5_Blowfly', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Weap_Pistol.A_Weapons_Legendary.Pistol_Hyperion_5_LogansGun', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Pistol_Jakobs_5_LuckCannon', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Jakobs_5_Maggie', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Pistol_Vladof_5_Expander', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Tediore_5_Shooterang', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Bandit_5_Zim', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Jakobs_CyberColt', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Hyperion_3_Fibber', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Hyperion_3_Globber', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Dahl_3_GwensOtherHead', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Pistol_Maliwan_3_HardReboot', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Hyperion_3_LadyFist', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.Pistol_Bandit_3_PartyPopper', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Maliwan_3_Moxxis_Probe', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=0.050000
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Unique.Pistol_Jakobs_3_Smasher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.Pistols.Pistol_Hyperion_3_T4sr', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_Launchers_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Bandit_5_BadaBoom', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.Launchers.RL_Vladof_5_Menace', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Maliwan_5_Cryophobia', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.RL_Tediore_5_KanedasLaser', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Vladof_5_Mongol', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Torgue_5_Nukem', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Legendary.RL_Bandit_5_Thingy', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Unique.RL_Torgue_3_Creamer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Launchers.A_Weapons_Unique.RL_Tediore_3_Rocketeer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Legendary.SG_Torgue_5_Flakker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.SG_Jakobs_5_Flayer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Legendary.SG_Bandit_5_SledgesShotgun', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Legendary.SG_Jakobs_5_Striker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Legendary.SG_Hyperion_5_ConferenceCall', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Bandit_3_Boganella', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Jakobs_Boomacorn', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Old_Hyperion_3_Bullpup', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cypressure_Weapons.A_Weapons_Unique.SG_Hyperion_3_CompanyMan',
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Torgue_3_JackOCannon', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Jakobs_3_Moonface', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cypressure_Weapons.A_Weapons_Unique.SG_Torgue_3_Landscaper2', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Tediore_3_Octo', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.Shotguns.SG_Tediore_3_PartyLine', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Jakobs_TooScoops', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Torgue_3_Torguemada', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Shotgun.A_Weapons_Unique.SG_Torgue_3_Wombat', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_SMG_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.SMG_Hyperion_5_CheatCode', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Legendary.SMG_Hyperion_5_Bitch', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Legendary.SMG_Maliwan_5_HellFire', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Legendary.SMG_Tediore_5_IVF', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Legendary.SMG_Dahl_5_Torrent', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Maliwan_3_BadTouch', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Old_Hyperion_BlackSnake', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.SMGs.SMG_Tediore_3_Boxxy', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Unique.SMG_Bandit_6_Glitch_CutieKiller', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cypressure_Weapons.A_Weapons_Unique.SMG_Bandit_3_FastTalker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Weap_SMG.A_Weapons_Unique.SMG_Dahl_3_Fridgia', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Weap_SMG.A_Weapons_Unique.SMG_Maliwan_3_Frostfire', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Maliwan_3_GoodTouch', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Bandit_3_MareksMouth', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SMG.A_Weapons_Unique.SMG_Bandit_3_MeatGrinder', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Hyperion_5_Invader', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Vladof_5_Longnail', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Maliwan_5_Magma', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Sniper_Old_Hyperion_5_OmniCannon', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Dahl_5_Pitchfork', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Jakobs_5_Skullmasher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Unique.Sniper_Maliwan_3_ChereAmie', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Weap_SniperRifles.A_Weapons_Unique.Sniper_Hyperion_3_FremingtonsEdge', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Unique.Sniper_Vladof_3_TheMachine', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Petunia_Weapons.Snipers.Sniper_Jakobs_3_Plunkett', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Unique.Sniper_Jakobs_3_Razorback', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Unique.Sniper_Dahl_3_WetWeek', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Weapons>

            #<Class Mods>

                set GD_Cork_Itempools.ClassModPools.Pool_ClassMod_Enforcer_05_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Enforcer_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Enforcer_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Enforcer_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Cork_Itempools.ClassModPools.Pool_ClassMod_Gladiator_05_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Gladiator_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Gladiator_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Gladiator_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Cork_Itempools.ClassModPools.Pool_ClassMod_Lawbringer_05_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Lawbringer_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Lawbringer_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Lawbringer_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Cork_Itempools.ClassModPools.Pool_ClassMod_Prototype_05_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Prototype_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Prototype_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_ItemGrades.ClassMods.BalDef_ClassMod_Prototype_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Crocus_Itempools.ClassModPools.Pool_ClassMod_Baroness_05_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Crocus_ItemGrades.ClassMods.BalDef_ClassMod_Baroness_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Crocus_ItemGrades.ClassMods.BalDef_ClassMod_Baroness_07_ChroniclerOfElpis', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Crocus_ItemGrades.ClassMods.BalDef_ClassMod_Baroness_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Quince_Itempools.ClassModPools.Pool_ClassMod_Doppelganger_05_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Quince_ItemGrades.ClassMods.BalDef_ClassMod_Doppelganger_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Petunia_ItemGrades.ClassMods.BalDef_Pet_ClassMod_Doppel_07_Chronicler', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Quince_ItemGrades.ClassMods.BalDef_ClassMod_Doppelganger_06_EridianVanquisher', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Class Mods>

            #<Grenade Mods>

                set GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_GrenadeMods.A_Item_Legendary.GM_BonusPackage', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_BouncingBonny', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_FireBee', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_FourSeasons', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_Leech', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_GrenadeMods.A_Item_Legendary.GM_Meganade', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_NastySurprise', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_Pandemic', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_GrenadeMods.A_Item_Legendary.GM_Quasar', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_RollingThunder', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Legendary.GM_StormFront', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Custom.GM_BabyBoomer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_GrenadeMods.A_Item_Unique.GM_DataScrubber', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_GrenadeMods.A_Item_Custom.GM_KissOfDeath', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Custom.GM_Snowball', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_GrenadeMods.A_Item_Custom.GM_SkyRocket',
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=0.050000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Grenade Mods>

            #<Oz Kits>

                set GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Astrotech', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_AckAck', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_MoonlightSaga', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Oxidizer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_SupportRelay', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Poopdeck', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Freedom', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_Invigoration', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Pet_MoonItems.A_Item_Unique.A_AntiAir_PerdyLights', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_MoonItems.A_Item_Unique.A_SystemsPurge', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Oz Kits>

            #<Shields>

                # Some shield pools already had everything I'd want them to have, namely:
                #  * GD_Itempools.ShieldPools.Pool_Shields_Absorption_06_Legendary
                #  * GD_Itempools.ShieldPools.Pool_Shields_Roid_06_Legendary

                set GD_Itempools.ShieldPools.Pool_Shields_Booster_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Booster_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Booster_AsteroidBelt', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Booster_MoxxisSlammer', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_Chimera_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_Shields.A_Item_Legendary.ItemGrade_Gear_Shield_Chimera_05_M0RQ', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Chimera_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Chimera_Haymaker', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_Impact_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_Shields.A_Item_Legendary.ItemGrade_Gear_Shield_Impact_05_Rerouter',
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_Juggernaut_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Juggernaut_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_Shields.A_Item_Unique.ItemGrade_Gear_Shield_Juggernaut_03_ShieldOfAges', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_NovaShields_All_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Nova_Singularity', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Nova_Supernova', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_NovaShields_Explosive_06_Legendary', 
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Nova_Starburst', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Cork_Shields.A_Item_Custom.ItemGrade_Shield_RapidRelease',
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_SpikeShields_All_06_Legendary BalancedItems
                (
                    ( 
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_SpikeShields_Corrosive_06_Legendary',
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None, 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                set GD_Itempools.ShieldPools.Pool_Shields_Standard_06_Legendary BalancedItems
                (
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Standard_05_Legendary', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_Ma_Shields.A_Item_Unique.ItemGrade_Gear_Shield_Naught', 
                        Probability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

                #<Normalize Legendary Shield Probabilities>

                    # Makes sure that the main legendary shield pool weights the various
                    # sub-pools such that there's a roughly equal chance for any of the
                    # shields in here.

                    set GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary BalancedItems
                    (
                        ( 
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Standard_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=2.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_NovaShields_All_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=5.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Roid_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=3.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_SpikeShields_All_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Juggernaut_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=2.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Booster_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=3.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Absorption_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=3.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Chimera_06_Legendary', 
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=3.000000 
                            ), 
                            bDropOnDeath=True 
                        ),
                        (
                            ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_Impact_06_Legendary',
                            InvBalanceDefinition=None, 
                            Probability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            bDropOnDeath=True 
                        )
                    )

                #</Normalize Legendary Shield Probabilities>

            #</Shields>

        #</Uniques/Legendaries in Legendary Pool>

        #<Luneshine Drops>

            #<Enable Luneshine in World Drops (Duplicate of UCP)>

                # Enables Luneshine in world drops.  This section is a duplicate of the
                # UCP section which does the same thing.

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Boominator PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_None PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Serenity PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_FastLearner PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Punisher PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_PiercingRounds PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Oxygenator PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_Safeguard PartSubType WPS_Normal

                set GD_Weap_Accessories.Moonstone.Moonstone_Attachment_HardenUp PartSubType WPS_Normal

            #</Enable Luneshine in World Drops (Duplicate of UCP)>

            #<Guaranteed Luneshine for Legendaries and Uniques>

                # Guarantee that all legendaries + uniques which support Luneshine will
                # always spawn with Luneshine

                {mp:guaranteed_luneshine_0}

                {mp:guaranteed_luneshine_1}

                {mp:guaranteed_luneshine_2}

                {mp:guaranteed_luneshine_3}

                {mp:guaranteed_luneshine_4}

                {mp:guaranteed_luneshine_5}

                {mp:guaranteed_luneshine_6}

                {mp:guaranteed_luneshine_7}

                {mp:guaranteed_luneshine_8}

                {mp:guaranteed_luneshine_9}

                {mp:guaranteed_luneshine_10}

                {mp:guaranteed_luneshine_11}

                {mp:guaranteed_luneshine_12}

                {mp:guaranteed_luneshine_13}

                {mp:guaranteed_luneshine_14}

                {mp:guaranteed_luneshine_15}

                {mp:guaranteed_luneshine_16}

                {mp:guaranteed_luneshine_17}

                {mp:guaranteed_luneshine_18}

                {mp:guaranteed_luneshine_19}

                {mp:guaranteed_luneshine_20}

                {mp:guaranteed_luneshine_21}

                {mp:guaranteed_luneshine_22}

                {mp:guaranteed_luneshine_23}

                {mp:guaranteed_luneshine_24}

                {mp:guaranteed_luneshine_25}

                {mp:guaranteed_luneshine_26}

                {mp:guaranteed_luneshine_27}

                {mp:guaranteed_luneshine_28}

                {mp:guaranteed_luneshine_29}

                {mp:guaranteed_luneshine_30}

                {mp:guaranteed_luneshine_31}

                {mp:guaranteed_luneshine_32}

                {mp:guaranteed_luneshine_33}

                {mp:guaranteed_luneshine_34}

                {mp:guaranteed_luneshine_35}

                {mp:guaranteed_luneshine_36}

                {mp:guaranteed_luneshine_37}

                {mp:guaranteed_luneshine_38}

                {mp:guaranteed_luneshine_39}

                {mp:guaranteed_luneshine_40}

                {mp:guaranteed_luneshine_41}

                {mp:guaranteed_luneshine_42}

                {mp:guaranteed_luneshine_43}

                {mp:guaranteed_luneshine_44}

                {mp:guaranteed_luneshine_45}

                {mp:guaranteed_luneshine_46}

                {mp:guaranteed_luneshine_47}

                {mp:guaranteed_luneshine_48}

                {mp:guaranteed_luneshine_49}

                {mp:guaranteed_luneshine_50}

                {mp:guaranteed_luneshine_51}

                {mp:guaranteed_luneshine_52}

                {mp:guaranteed_luneshine_53}

                {mp:guaranteed_luneshine_54}

                {mp:guaranteed_luneshine_55}

                {mp:guaranteed_luneshine_56}

                {mp:guaranteed_luneshine_57}

                {mp:guaranteed_luneshine_58}

                {mp:guaranteed_luneshine_59}

                {mp:guaranteed_luneshine_60}

                {mp:guaranteed_luneshine_61}

                {mp:guaranteed_luneshine_62}

                {mp:guaranteed_luneshine_63}

                {mp:guaranteed_luneshine_64}

                {mp:guaranteed_luneshine_65}

                {mp:guaranteed_luneshine_66}

                {mp:guaranteed_luneshine_67}

                {mp:guaranteed_luneshine_68}

                {mp:guaranteed_luneshine_69}

                {mp:guaranteed_luneshine_70}

                {mp:guaranteed_luneshine_71}

                {mp:guaranteed_luneshine_72}

                {mp:guaranteed_luneshine_73}

                {mp:guaranteed_luneshine_74}

                {mp:guaranteed_luneshine_75}

                {mp:guaranteed_luneshine_76}

                {mp:guaranteed_luneshine_77}

                {mp:guaranteed_luneshine_78}

                {mp:guaranteed_luneshine_79}

                {mp:guaranteed_luneshine_80}

                {mp:guaranteed_luneshine_81}

                {mp:guaranteed_luneshine_82}

                {mp:guaranteed_luneshine_83}

                {mp:guaranteed_luneshine_84}

            #</Guaranteed Luneshine for Legendaries and Uniques>

        #</Luneshine Drops>

        #<Better Weapon Drops>

            set GD_Itempools.WeaponPools.Pool_Weapons_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Marigold BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_clap_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_clap_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_clap_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_clap_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_clap_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=0.500000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:weapon_clap_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            #<Better Individual Weapon Type Pools>

                # I'm not aware of any enemies which drop directly from these weapon type
                # pools, but Lost Legion Eternal troops do drop a laser weapon when they
                # start ascending.  They do it from an "EnemyUse" pool (ie: the same pool
                # which equips the Eternals themselves), but we're changing that to use
                # the main drop pool, elsewhere in this mod.  This statement will make the
                # generic laser drop pool use our custom weights.

                set GD_Itempools.WeaponPools.Pool_Weapons_Lasers BalancedItems
                (
                    ( 
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_01_Common', 
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant={config:weapon_base_common},
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_02_Uncommon', 
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant={config:weapon_base_uncommon},
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_04_Rare', 
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant={config:weapon_base_rare},
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_05_VeryRare', 
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant={config:weapon_base_veryrare},
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Lasers_Glitch_Marigold', 
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant={config:weapon_base_glitch},
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary', 
                        InvBalanceDefinition=None, 
                        Probability=( 
                            BaseValueConstant={config:weapon_base_legendary},
                            BaseValueAttribute=None, 
                            InitializationDefinition=None,
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Better Individual Weapon Type Pools>

        #</Better Weapon Drops>

        #<Better Oz Kit Drops>

            set GD_Itempools.MoonItemPools.Pool_MoonItem_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_common}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_uncommon}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_rare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_veryrare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:ozkit_base_legendary}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Oz Kit Drops>

        #<Better Class Mods>

            set GD_Itempools.ClassModPools.Pool_ClassMod_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:com_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Class Mods>

        #<Better Grenade Mods>

            set GD_Itempools.GrenadeModPools.Pool_GrenadeMods_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:grenade_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Grenade Mods>

        #<Better Shields>

            set GD_Itempools.ShieldPools.Pool_Shields_All BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:shield_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Shields>

    #</Loot Pool Tweaks>

    #<Currency Drop Improvements>

        #<More Frequent Moonstone>

            # Makes Moonstone drop a little more frequently

            set GD_Itempools.DropWeights.DropODDS_Moonstone:ConstantAttributeValueResolver_1 ConstantValue {config:moonstone_drop}

            set GD_Itempools.DropWeights.DropODDS_MoonstoneCluster:ConstantAttributeValueResolver_1 ConstantValue {config:moonstone_cluster_drop}

        #</More Frequent Moonstone>

    #</Currency Drop Improvements>

    #<Better Containers>

        #<Better Epic Chests>

            # Improves loot from "Epic" chests in the game

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_AssaultRifles_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Shotguns_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_SMG_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Sniper_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Lasers_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_Pistols BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Pistols_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_Launchers BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Launchers_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Items BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Shields BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_GrenadeMods BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_ClassMods BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChest_MoonItems BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Epic Chests>

        #<Better Glitched Epic Chests>

            # Improves Glitched Epic chests.  These will be nearly identical to their
            # usual Epic components, but with a better chance for Glitch weaponry.
            #
            # Also, there are two sets of pools in here which are used by glitch chests,
            # one with "Epic" twice in the name, and one with "Epic" only the once.
            # The differences between them in the stock versions are very slight.  I'm
            # setting them both to be equal in here.

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns_Epic_Marigold BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_AssaultRifles_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Shotguns_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_SMG_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Sniper_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Lasers_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Pistols_Epic_Marigold BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Pistols_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Launchers_Epic_Marigold BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Launchers_Glitch_Marigold',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:epic_glitch_base_legendary_dbl},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns_Marigold BalancedItems
            (
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns_Epic_Marigold',
                    InvBalanceDefinition=None,
                    Probability=( 
                        BaseValueConstant=1.000000,
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Pistols_Marigold BalancedItems
            (
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Pistols_Epic_Marigold',
                    InvBalanceDefinition=None,
                    Probability=( 
                        BaseValueConstant=1.000000,
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Launchers_Marigold BalancedItems
            (
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.Treasure_ChestPools.Pool_EpicChest_Weapons_Launchers_Epic_Marigold',
                    InvBalanceDefinition=None,
                    Probability=( 
                        BaseValueConstant=1.000000,
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Glitched Epic Chests>

        #<Better Moonstone Chests>

            # Make Moonstone chests only drop legendaries.  If you're paying 40E you should
            # be getting something for your trouble.

            set GD_Itempools.Treasure_ChestPools.Pool_EpicChestMoonstone_Weapons_LongGuns BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                ),
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.WeaponPools.Pool_Weapons_Pistols_Moonstone BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.WeaponPools.Pool_Weapons_Launchers_Moonstone BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.ShieldPools.Pool_Shields_All_Moonstone BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.GrenadeModPools.Pool_GrenadeMods_All_Moonstone BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.ClassModPools.Pool_ClassMod_All_Moonstone BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.MoonItemPools.Pool_MoonItem_All_Moonstone BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Moonstone Chests>

        #<Better Regular Chests>

            set GD_Itempools.Treasure_ChestPools.Pool_WeaponChest_Weapons_LongGuns BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_AssaultRifles_Glitch_Marigold', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_AssaultRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Shotguns_Glitch_Marigold', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Shotguns_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_SMG_Glitch_Marigold', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Sniper_Glitch_Marigold', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SniperRifles_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Lasers_Glitch_Marigold', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_WeaponChest_Weapons_Pistols BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Pistols_Glitch_Marigold', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_WeaponChest_Weapons_Launchers BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_Pistols_Glitch_Marigold', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_glitch},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Launchers_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_WeaponChest_Shields BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_WeaponChest_GrenadeMods BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_WeaponChest_ClassMods BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.ClassModPools.Pool_ClassMod_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

            set GD_Itempools.Treasure_ChestPools.Pool_WeaponChest_MoonItems BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_01_Common', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_common},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_02_Uncommon', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_uncommon},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_04_Rare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_rare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_05_VeryRare', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_veryrare},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary', 
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant={config:treasure_base_legendary},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    ), 
                    bDropOnDeath=True 
                )
            )

        #</Better Regular Chests>

        #<Better Lockers>

            # Any gear dropped by lockers will always be Blue rarity.  This could
            # technically be seen as a bit of a nerf given the rest of this mod, since
            # lockers could previously drop legendaries if you were lucky enough, but
            # I like the blue locker loot thing.

            set GD_Itempools.LootablePools.Pool_Locker_Items_SMGsAndPistols BalancedItems
            (
                ( 
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_04_Rare',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_2_Uncommon', 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=False 
                ),
                (
                    ItmPoolDefinition=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_SMG_04_Rare',
                    InvBalanceDefinition=None, 
                    Probability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_3_Uncommoner', 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    bDropOnDeath=True 
                )
            )

            level None set GD_Itempools.ListDefs.StorageLockerLoot LootData[4].ItemAttachments[0].ItemPool ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_04_Rare'

            level None set GD_Itempools.ListDefs.StorageLockerLoot LootData[5].ItemAttachments[1].ItemPool ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_04_Rare'

        #</Better Lockers>

        #<Better Safes>

            # Improves Safes - the amount of money is increased, Moonstone results are
            # far more common, and if there is gear drops, they are guaranteed
            # legendaries

            level None set GD_Balance_Treasure.LootableGrades.ObjectGrade_Safe DefaultLoot
            (
                ( 
                    ConfigurationName="Moonstone", 
                    LootGameStageVarianceFormula=None, 
                    Weight=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    ItemAttachments=( 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo4" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo1" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo2" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=0.800000 
                            ), 
                            AttachmentPointName="Ammo5" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=0.800000 
                            ), 
                            AttachmentPointName="Ammo3" 
                        ) 
                    ) 
                ),
                ( 
                    ConfigurationName="Eridium", 
                    LootGameStageVarianceFormula=None, 
                    Weight=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    ItemAttachments=( 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo4" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo1" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo2" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=0.800000 
                            ), 
                            AttachmentPointName="Ammo5" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=0.800000 
                            ), 
                            AttachmentPointName="Ammo3" 
                        ) 
                    ) 
                ),
                ( 
                    ConfigurationName="Safe_Cash", 
                    LootGameStageVarianceFormula=None, 
                    Weight=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    ItemAttachments=( 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo1" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=0.800000 
                            ), 
                            AttachmentPointName="Ammo2" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo3" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo4" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=0.800000 
                            ), 
                            AttachmentPointName="Ammo5" 
                        ) 
                    ) 
                ),
                ( 
                    ConfigurationName="Grenade", 
                    LootGameStageVarianceFormula=None, 
                    Weight=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_3_Uncommoner', 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    ItemAttachments=( 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.GrenadeModPools.Pool_GrenadeMods_06_Legendary', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Grenade" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_Grenades', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Shield" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo1" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo2" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_Grenades', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo5" 
                        ) 
                    ) 
                ),
                ( 
                    ConfigurationName="Shield", 
                    LootGameStageVarianceFormula=None, 
                    Weight=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_3_Uncommoner', 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    ItemAttachments=( 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.ShieldPools.Pool_Shields_All_06_Legendary', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Shield" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_06_Legendary', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=0.500000 
                            ), 
                            AttachmentPointName="Grenade" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo1" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo2" 
                        ) 
                    ) 
                ),
                ( 
                    ConfigurationName="Pistol", 
                    LootGameStageVarianceFormula=None, 
                    Weight=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_3_Uncommoner', 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    ItemAttachments=( 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_06_Legendary', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Grenade" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_Repeater', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Shield" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo1" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo2" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            AttachmentPointName="Ammo5" 
                        ) 
                    ) 
                )
            )

        #</Better Safes>

        #<Fix Broken Shield Pools>

            # Various chests in the game have a possible "Shields" item pool which will
            # never actually trigger in-game because they include an invalid item in the
            # pool.  This fixes the pool so that it can be chosen again.

            {mp:euphoria_fix_0}

            {mp:euphoria_fix_1}

            {mp:euphoria_fix_2}

            {mp:euphoria_fix_3}

            {mp:euphoria_fix_4}

            {mp:euphoria_fix_5}

        #</Fix Broken Shield Pools>

        #<Better OzKit-Only Chests>

            # Ups the rarity (slightly, just greens+blues) of ozkit-only chests.  I think
            # there's only the one of these, in Triton Flats.

            set GD_Itempools.ListDefs.AmmoCrateLoot_OzKitsOnly LootData
            (
                ( 
                    ConfigurationName="AmmoCrate", 
                    bIgnoreGameStageRestrictions=False, 
                    LootGameStageVarianceFormula=None, 
                    Weight=( 
                        BaseValueConstant=100.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    ItemAttachments=( 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_02_Uncommon', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            InvBalanceDefinition=None, 
                            AttachmentPointName="Ammo1" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_04_Rare', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            InvBalanceDefinition=None, 
                            AttachmentPointName="Ammo2" 
                        ), 
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.MoonItemPools.Pool_MoonItem_02_Uncommon', 
                            PoolProbability=( 
                                BaseValueConstant=1.000000, 
                                BaseValueAttribute=None, 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ), 
                            InvBalanceDefinition=None, 
                            AttachmentPointName="Ammo3" 
                        ) 
                    ) 
                )
            )

        #</Better OzKit-Only Chests>

        #<Improve Zarpedon's Chest>

            # Improves Col. Zarpedon's chest on the Drakensburg (in Pity's Fall)

            level Wreck_P set GD_Balance_Treasure.ChestGradesUnique.Balance_Chest_ZarpedonsStash DefaultLoot[0].ItemAttachments
            (
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_CybercColt', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Gun1" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_LongGuns', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Gun2" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Ammo1" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Ammo2" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Ammo3" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Ammo4" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_GrenadeMods', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Grenade1" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_GrenadeMods', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Grenade2" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_GrenadeMods', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Grenade3" 
                ), 
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_GrenadeMods', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ), 
                    InvBalanceDefinition=None, 
                    AttachmentPointName="Grenade4" 
                ) 
            ) 

        #</Improve Zarpedon's Chest>

        #<Improve "Picking Up The Pieces" Laser Chest>

            # Improves the laser weapons found in the mission chest for "Picking up the
            # Pieces", at Lunar Launching Station.  From white to blue rarity.

            level RandDFacility_P set GD_Co_Side_PickingUp_Data.ListDefs.WeaponChestLaser LootData[0].ItemAttachments[0].ItemPool ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_04_Rare'

            level RandDFacility_P set GD_Co_Side_PickingUp_Data.ListDefs.WeaponChestLaser LootData[0].ItemAttachments[1].ItemPool ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers_04_Rare'

        #</Improve "Picking Up The Pieces" Laser Chest>

        #<Improve Mutator Arena Chests>

            # Improves the Mutator Arena (in The Cortex, via the mission l33t h4X0rz) in
            # a few ways.

            #<Better Probabilities>

                # Changes to the weights used (these are keyed off of the difficulty
                # scale)

                {mp:mutator_weight_uncommon_0}

                {mp:mutator_weight_uncommon_1}

                {mp:mutator_weight_uncommon_2}

                {mp:mutator_weight_uncommon_3}

                {mp:mutator_weight_uncommon_4}

                {mp:mutator_weight_uncommon_5}

                {mp:mutator_weight_uncommon_6}

                {mp:mutator_weight_uncommon_7}

                {mp:mutator_weight_uncommon_8}

                {mp:mutator_weight_rare_0}

                {mp:mutator_weight_rare_1}

                {mp:mutator_weight_rare_2}

                {mp:mutator_weight_rare_3}

                {mp:mutator_weight_rare_4}

                {mp:mutator_weight_rare_5}

                {mp:mutator_weight_rare_6}

                {mp:mutator_weight_rare_7}

                {mp:mutator_weight_rare_8}

                {mp:mutator_weight_veryrare_0}

                {mp:mutator_weight_veryrare_1}

                {mp:mutator_weight_veryrare_2}

                {mp:mutator_weight_veryrare_3}

                {mp:mutator_weight_veryrare_4}

                {mp:mutator_weight_veryrare_5}

                {mp:mutator_weight_veryrare_6}

                {mp:mutator_weight_veryrare_7}

                {mp:mutator_weight_veryrare_8}

                {mp:mutator_weight_legendary_0}

                {mp:mutator_weight_legendary_1}

                {mp:mutator_weight_legendary_2}

                {mp:mutator_weight_legendary_3}

                {mp:mutator_weight_legendary_4}

                {mp:mutator_weight_legendary_5}

                {mp:mutator_weight_legendary_6}

                {mp:mutator_weight_legendary_7}

                {mp:mutator_weight_legendary_8}

            #</Better Probabilities>

            #<Better Contents>

                # Improve the contents of the chests

                {mp:mutator_common_coms}

                {mp:mutator_common_grenades}

                {mp:mutator_common_ozkits}

                {mp:mutator_common_shields}

                {mp:mutator_common_launchers}

                {mp:mutator_common_longguns}

                {mp:mutator_common_pistols}

                {mp:mutator_red_coms}

                {mp:mutator_red_grenades}

                {mp:mutator_red_ozkits}

                {mp:mutator_red_shields}

                {mp:mutator_red_launchers}

                {mp:mutator_red_launchers_glitch}

                {mp:mutator_red_longguns}

                {mp:mutator_red_longguns_glitch}

                {mp:mutator_red_pistols}

                {mp:mutator_red_pistols_glitch}

            #</Better Contents>

        #</Improve Mutator Arena Chests>

    #</Better Containers>

    #<Better Enemy Drops>

        #<General Boss Drop Changes>

            #<Guaranteed Boss Drops>

                # Bosses should always drop their unique items

                set GD_Itempools.DropWeights.DropODDS_BossUniques:ConstantAttributeValueResolver_0 ConstantValue {config:boss_drop_uniques}

                set GD_Itempools.DropWeights.DropODDS_BossUniqueRares:ConstantAttributeValueResolver_0 ConstantValue {config:boss_drop_rares}

            #</Guaranteed Boss Drops>

            #<Boss Drop Improved Quantities>

                # Bosses which have more than one possible unique/legendary reward will always
                # drop that many items on death, so you should have some chance of getting both.

                #<Boomer>

                    set GD_Itempools.Runnables.Pool_Boomer Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Boomer>

                #<Bosun>

                    set GD_Itempools.Runnables.Pool_Bosun Quantity
                    (
                        BaseValueConstant=3.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Bosun>

                #<Corporal Bob>

                    set GD_Itempools.Runnables.Pool_DahlMarineCentTerm Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Corporal Bob>

                #<Final Boss>

                    set GD_Itempools.Runnables.Pool_FinalBoss_Head Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Final Boss>

                #<Final Boss (raid)>

                    # Note that Pool_FinalBossRaid gets dropped twice, so we are setting
                    # the quantity to 2 rather than 4.

                    set GD_Itempools.Runnables.Pool_FinalBossRaid Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                    set GD_Itempools.Runnables.Pool_FinalBossRaid_Head Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Final Boss (raid)>

                #<Giant Shuggurath of Ice>

                    set GD_Itempools.Runnables.Pool_GiantCryoHive Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Giant Shuggurath of Ice>

                #<Mini Destroyer>

                    set GD_Itempools.Runnables.Pool_MiniDestroyer Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Mini Destroyer>

                #<Felicity Rampant>

                    set GD_Itempools.Runnables.Pool_ProtoWarBot Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Felicity Rampant>

                #<Lost Legion Powersuit Noob>

                    set GD_Itempools.Runnables.Pool_RedShirt Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Lost Legion Powersuit Noob>

                #<Iwajira>

                    set GD_Itempools.Runnables.Pool_Rockzilla Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Iwajira>

                #<Rooster Booster>

                    set GD_Itempools.Runnables.Pool_RoosterBooster Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Rooster Booster>

                #<Swagman>

                    # We're actually just setting this to 3, rather than the full size of
                    # the pool, which would be 6.

                    set GD_Itempools.Runnables.Pool_ScavWastelandWalker Quantity
                    (
                        BaseValueConstant=3.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Swagman>

                #<Colonel Zarpedon>

                    set GD_Itempools.Runnables.Pool_Tungsteena Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</Colonel Zarpedon>

                #<X-STLK-23>

                    set GD_Itempools.Runnables.Pool_XSTLK23 Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</X-STLK-23>

                #<5H4D0W-TP>

                    set GD_Ma_Itempools.Runnables.Pool_FakeShadowTP_Marigold Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</5H4D0W-TP>

                #<5H4D0W-TP (probably unused)>

                    # I'm pretty sure this pool isn't actually used anywhere, but I'm
                    # bumping the quantity just in case.

                    set GD_Ma_Itempools.Runnables.Pool_ShadowTP_Marigold Quantity
                    (
                        BaseValueConstant=2.000000,
                        BaseValueAttribute=None,
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000
                    )

                #</5H4D0W-TP (probably unused)>

            #</Boss Drop Improved Quantities>

            #<Boss Drop Normalization>

                #  Make loot pools for bosses have equal probabilities for all items

                #<Iwajira / Volcantis / Odjurymir>

                    # The Hail gets added to the pool with a scale of 8 via some kind of
                    # not-a-hotfix-but-acts-like-a-hotfix.  This nerfs that down to 1.

                    level Moonsurface_P set GD_Itempools.Runnables.Pool_Rockzilla BalancedItems[2].Probability.BaseValueScaleConstant 1

                #</Iwajira / Volcantis / Odjurymir>

                #<Final Boss>

                    # Technically what we're removing here is a check on playthrough.

                    level None set GD_Itempools.Runnables.Pool_FinalBoss_Head BalancedItems[0].Probability.InitializationDefinition None

                    level None set GD_Itempools.Runnables.Pool_FinalBoss_Head BalancedItems[1].Probability.InitializationDefinition None

                #</Final Boss>

                #<Final Boss (raid)>

                    # Technically what we're removing here is a check on playthrough.

                    level None set GD_Itempools.Runnables.Pool_FinalBossRaid_Head BalancedItems[0].Probability.InitializationDefinition None

                    level None set GD_Itempools.Runnables.Pool_FinalBossRaid_Head BalancedItems[1].Probability.InitializationDefinition None

                #</Final Boss (raid)>

            #</Boss Drop Normalization>

        #</General Boss Drop Changes>

        #<Better Badass Drops>

            # Badass drops are actually already pretty good in TPS, but we're tweaking
            # them a bit further

            set GD_Itempools.ListDefs.BadassEnemyGunsAndGear ItemPools
            (
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.GeneralItemPools.Pool_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant={config:badass_pool_veryrare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant={config:badass_pool_glitch}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:badass_pool_epicchest}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.VehicleSkins.Pool_VehicleSkins_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_VehicleSkins', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=0.500000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_MoonstoneCluster', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=10.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Health_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Health', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Oxygen_Instant', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Oxygen', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_NeedOnly', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=0.500000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_Emergency', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                )
            )

            # Also set up the Claptastic Voyage Badass pool

            set GD_Ma_ItemPools.ListDefs.BadassEnemyGunsAndGear_Marigold ItemPools
            (
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.GeneralItemPools.Pool_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_All_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant={config:badass_pool_clap_veryrare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant={config:badass_pool_clap_glitch}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:badass_pool_clap_epicchest}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.VehicleSkins.Pool_VehicleSkins_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_VehicleSkins', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=0.500000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_MoonstoneCluster', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=10.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Health_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Health', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_NeedOnly', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=0.500000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_Emergency', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                )
            )

        #</Better Badass Drops>

        #<Better Super Badass Drops>

            # "Super Badass" actually refers to a number of specific enemies in the game,
            # not actual Badasses.  Included here are RedBelly, Felicity Rampant, Meg,
            # etc.

            set GD_Itempools.ListDefs.SuperBadassEnemyGunsAndGear ItemPools
            (
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_04_Rare', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_rare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_veryrare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_glitch}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_legendary}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.GeneralItemPools.Pool_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_epicchest},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000,
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.VehicleSkins.Pool_VehicleSkins_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_VehicleSkins', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=10.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Health_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Health', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Oxygen_Instant', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Oxygen', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_NeedOnly', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=0.250000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_Emergency', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                )
            )

            # Also set up the Claptastic Voyage Super Badass Pool (just Self-Loathing and Despair)

            set GD_Ma_ItemPools.ListDefs.SuperBadassEnemyGunsAndGear_Marigold ItemPools
            (
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_04_Rare', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_rare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_veryrare}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_glitch}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_legendary}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.GeneralItemPools.Pool_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:super_badass_pool_epicchest},
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000,
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.VehicleSkins.Pool_VehicleSkins_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_VehicleSkins', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=10.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Health_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Health', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_NeedOnly', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=0.250000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_Emergency', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                )
            )

        #</Better Super Badass Drops>

        #<Better Ultimate Badass Drops>

            # "Ultimate Badass" refers to a few specific enemies in the game, including
            # the final boss, Iwajira, etc.

            set GD_Itempools.ListDefs.UltimateBadassEnemyGunsAndGear ItemPools
            (
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_veryrare_1}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_veryrare_2}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_glitch_1}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_glitch_2}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_legendary_1}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_legendary_2}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_legendary_3}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_epicchest_1}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_epicchest_2}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_epicchest_3}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.VehicleSkins.Pool_VehicleSkins_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_VehicleSkins', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=10.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_MoonstoneCluster', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Moonstone', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=100.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Moonstone', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=100.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Health_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Health', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Oxygen_Instant', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Oxygen', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_NeedOnly', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=0.250000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_Emergency', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                )
            )

            # Also set up the Claptastic Voyage Ultimate pool

            set GD_Ma_ItemPools.ListDefs.UltimateBadassEnemyGunsAndGear_Marigold ItemPools
            (
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_clap_veryrare_1}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_clap_veryrare_2}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_clap_glitch_1}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_clap_glitch_2}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_legendary_1}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_legendary_2}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_legendary_3}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_epicchest_1}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_epicchest_2}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant={config:ultimate_badass_pool_epicchest_3}, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None,
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.VehicleSkins.Pool_VehicleSkins_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_VehicleSkins', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=10.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_MoonstoneCluster', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Moonstone', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=100.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Moonstone', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=100.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Health_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Health', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_NeedOnly', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=0.250000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_Emergency', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                )
            )

        #</Better Ultimate Badass Drops>

        #<Better Raid Boss Drops>

            # There are only a few enemies which use this pool, namely: Iwajira,
            # Volcantis, Odjurymir, Raum-Kampfjet Mark V, and the final boss of
            # the game.  Not actually changing this TOO much, apart from improving
            # the rarity of dropped loot, since these bosses seem to drop from
            # various pools multiple times.

            set GD_Itempools.ListDefs.RaidBossEnemyGunsAndGear ItemPools
            (
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_04_Rare', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.GeneralItemPools.Pool_GunsAndGearDropNumPlayersPlusOne', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.GeneralItemPools.Pool_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_04_Rare', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_05_VeryRare', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1or2', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1or2', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1or2', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1or2', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1or2', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1or2', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_MoonstoneCluster', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=100.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Moonstone', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=200.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Moonstone', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=200.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Health_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Health', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Health_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Health', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Oxygen_Instant', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Oxygen', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Oxygen_Instant', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Oxygen', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_DropAlways', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_NeedOnly', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=0.250000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_Emergency', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                )
            )

        #</Better Raid Boss Drops>

        #<Better Chubby Drops>

            # Chubbies in TPS don't have a specific unique loot pool, and the only
            # type of Chubby in the game is Stalkers.  So it's a bit silly to even
            # bother with this, but we'll improve their drop pool anyway.  One
            # guaranteed legendary, and the rest from the epic loot chest pool.

            set GD_Itempools.ListDefs.ChubbyEnemyGunsAndGear ItemPools
            (
                ( 
                    ItemPool=ItemPoolDefinition'GD_Itempools.EnemyDropPools.Pool_GunsAndGear_06_Legendary',
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear',
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear',
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear',
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.Treasure_ChestPools.Pool_EpicChest_Weapons_GunsAndGear', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.GearDrops_PerPlayer', 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.VehicleSkins.Pool_VehicleSkins_All', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_VehicleSkins', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=10.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Money_1_BIG', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone_Cluster', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Moonstone', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.BuffDrinkPools.Pool_BuffDrinks_HealingInstant', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.BuffDrinkPools.Pool_BuffDrinks_OxygenInstant', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_Oxygen', 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_NeedOnly', 
                    PoolProbability=( 
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=AttributeInitializationDefinition'GD_Balance.WeightingPlayerCount.AmmoDrops_PerPlayer', 
                        BaseValueScaleConstant=0.250000 
                    ) 
                ),
                (
                    ItemPool=ItemPoolDefinition'GD_Itempools.AmmoAndResourcePools.Pool_Ammo_All_Emergency', 
                    PoolProbability=( 
                        BaseValueConstant=1.000000, 
                        BaseValueAttribute=None, 
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    ) 
                )
            )

        #</Better Chubby Drops>

        #<Holodome Onslaught Unique Drop Rates>

            # Pretty much all the "custom" Holodome Onslaught enemies will drop from a
            # custom pool containing all the items added in that DLC.  By default it's
            # 6.6%.  We're buffing that a bit.  You won't see many of these during the
            # first few rounds of the Onslaught, but in the final stages, stuff will
            # be dropping quite frequently.

            set GD_Pet_ItemPools.DropWeights.DropODDS_Pet_BossUniques:ConstantAttributeValueResolver_0 ConstantValue {config:holodome_drop_uniques}

        #</Holodome Onslaught Unique Drop Rates>

        #<Claptastic Voyage Legendary Drop Rates>

            # Some enemies from the Claptastic Voyage DLC have the chance to drop
            # a unique legendary, at a default drop rate of 0.1%.  We're going to
            # bump that up a little bit.

            set GD_Ma_ItemPools.DropWeights.DropODDS_RareDropLegendary_Marigold:ConstantAttributeValueResolver_0 ConstantValue .015

        #</Claptastic Voyage Legendary Drop Rates>

        #<Better Individual Enemy Drops>

            # Some enemies in the game don't drop as I think they should, so this buffs
            # some of them

            #<Flameknuckle (playthrough 1)>

                # Makes Flameknuckle drop from the Badass pool on playthrough one
                # (ordinarily this only happens on Playthrough 2+).

                level MoonShotIntro_P set GD_DahlPowersuit_Knuckle.Population.PawnBalance_DahlSergeantFlameKnuckle PlayThroughs[0].CustomItemPoolIncludedLists
                (
                    ItemPoolListDefinition'GD_Itempools.ListDefs.BadassEnemyGunsAndGear'
                )

            #</Flameknuckle (playthrough 1)>

            #<Flameknuckle (Holodome Onslaught)>

                # The stock Flameknuckle found in the Holodome Onslaught weirdly drops
                # some specific white+green gear.  Upgrading that to purple+glitch.

                {mp:flameknuckle_holodome_drop_17}

                {mp:flameknuckle_holodome_drop_18}

                {mp:flameknuckle_holodome_drop_19}

                {mp:flameknuckle_holodome_drop_20}

                level Eridian_Slaughter_P set GD_DahlPowersuit_KnuckleRepaired.Population.PawnBalance_DahlSergeantFlameKnuckle DefaultItemPoolList[21].ItemPool ItemPoolDefinition'GD_Ma_ItemPools.WeaponPools.Pool_Weapons_All_Glitch_Marigold'

            #</Flameknuckle (Holodome Onslaught)>

            #<Nel>

                # Make Nel drop from the epic chest pools, rather than
                # specific rarity levels

                {mp:nel_drops_15}

                {mp:nel_drops_16}

                {mp:nel_drops_17}

                {mp:nel_drops_18}

                {mp:nel_drops_19}

                {mp:nel_drops_20}

                {mp:nel_drops_21}

            #</Nel>

            #<Lost Legion Eternal>

                # When they start to ascend, Lost Legion Eternal troops drop from
                # Pool_Weapons_Laser_EnemyUse.  We change this to the main Laser pool
                # instead, so it uses our custom weights.

                level None set GD_DahlFanatic.Character.AIDef_DahlFanatic:AIBehaviorProviderDefinition_0.Behavior_SpawnItems_0 ItemPoolList[0].ItemPool ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Lasers'

            #</Lost Legion Eternal>

            #<Elder Opha / Virtuous Opha>

                # Make Elder Opha and Virtuous Opha drop from the badass pool,
                # rather than standard.

                level None set GD_Population_Eridian_Opha.AIPawn_Bal.PawnBalance_Opha_Heavy DefaultItemPoolIncludedLists[0] ItemPoolListDefinition'GD_Itempools.ListDefs.BadassEnemyGunsAndGear'

                level None set GD_Population_Eridian_Opha.AIPawn_Bal.PawnBalance_Opha_BadAss DefaultItemPoolIncludedLists[0] ItemPoolListDefinition'GD_Itempools.ListDefs.BadassEnemyGunsAndGear'

            #</Elder Opha / Virtuous Opha>

            #<Teh Earworm>

                # You fight and kill Teh Earworm three times over the course of the You
                # Can Stop The Music mission, and given our guaranteed-drop section, this
                # would end up dropping three Longest Yards.  Rather than bump the drop
                # probabilities down (which could result in not getting ANY drops from
                # that pool, we're adding the the Zim and the Min Min Lighter to its drop
                # pool, so you'll at least get some variety in the drops.

                set GD_Ma_ItemPools.Runnables.Pool_EarWorm_Marigold BalancedItems
                (
                    ( 
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Ma_Weapons.A_Weapons_Legendary.Laser_Hyperion_5_LongestYard', 
                        Probability=( 
                            BaseValueConstant=0.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    ( 
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Pistol.A_Weapons_Legendary.Pistol_Bandit_5_Zim', 
                        Probability=( 
                            BaseValueConstant=0.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    ( 
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_Lasers.A_Weapons_Legendary.Laser_Tediore_5_Tesla', 
                        Probability=( 
                            BaseValueConstant=0.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Teh Earworm>

            #<Tweak Empyrean Sentinel (raid version) Pool>

                # The raid version of the Empyrean Sentinel contains two chances to drop
                # the ZX-1: one from its own pool, and one from the Colonel Zarpedon pool
                # which it also drops from.  This removes the ZX-1 from the Sentinel's
                # pool so that the ZX-1 isn't weighted any more than it already is.

                set GD_Itempools.Runnables.Pool_FinalBossRaid BalancedItems
                (
                    ( 
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=WeaponBalanceDefinition'GD_Cork_Weap_SniperRifles.A_Weapons_Legendary.Sniper_Vladof_5_Longnail', 
                        Probability=( 
                            BaseValueConstant=0.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Nova_Singularity', 
                        Probability=( 
                            BaseValueConstant=0.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    ),
                    (
                        ItmPoolDefinition=None, 
                        InvBalanceDefinition=InventoryBalanceDefinition'GD_ItemGrades.Shields.ItemGrade_Gear_Shield_Absorption_PrismaticBulwark', 
                        Probability=( 
                            BaseValueConstant=0.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=AttributeInitializationDefinition'GD_Balance.Weighting.Weight_1_Common', 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        bDropOnDeath=True 
                    )
                )

            #</Tweak Empyrean Sentinel (raid version) Pool>

            #<Improved EOS/SH4D0W-TP Loot Shower>

                # This actually isn't much different from stock, though we add in explicit
                # Glitch drops, plus some extra money+moonstone.

                {mp:eos_drop_144}

                {mp:eos_drop_145}

                {mp:eos_drop_146}

                {mp:eos_drop_147}

                {mp:eos_drop_148}

                {mp:eos_drop_149}

                {mp:eos_drop_150}

                {mp:eos_drop_151}

                {mp:eos_drop_153}

                {mp:eos_drop_154}

                {mp:eos_drop_155}

                {mp:eos_drop_156}

                {mp:eos_drop_157}

                {mp:eos_drop_158}

                {mp:eos_drop_159}

                {mp:eos_drop_160}

                {mp:eos_drop_161}

            #</Improved EOS/SH4D0W-TP Loot Shower>

            #<Powersuit Felicity (Holodome Onslaught)>

                # Makes Powersuit Felicity drop from the Badass pool

                level Eridian_Slaughter_P set GD_DahlCombatSuit_Felicity.Population.PawnBalance_DahlCombatSuit_Felicity DefaultItemPoolIncludedLists (ItemPoolListDefinition'GD_Itempools.ListDefs.BadassEnemyGunsAndGear')

            #</Powersuit Felicity (Holodome Onslaught)>

        #</Better Individual Enemy Drops>

        #<Enemy Drop Nerfs>

            # The Pre-Sequel is, in general, far more generous with loot than BL2 was, and
            # sometimes that tendency, in conjunction with everything else in this mod,
            # creates a situation where far too much is getting dropped, even for me.
            # (This happens in the later BL2 DLCs as well, actually.)  This section nerfs
            # various drops so that it's not totally overwhelming.

            #<Bosses>

                #<Felicity Rampant>

                    # Felicity Rampant drops twice from the Super Badass pool, in addition
                    # to the unique pool loot.  Given the rest of this mod, and especially
                    # given the room full of epic chests just after, it's a bit much.
                    # This will convert one of the Super Badass drops to be a couple of
                    # standard enemy drops.

                    level DahlFactory_Boss set GD_ProtoWarBot_CoreBody.Character.AIDef_ProtoWarBot_CoreBody:AIBehaviorProviderDefinition_0.Behavior_SpawnItems_10 ItemPoolIncludedLists[0] ItemPoolListDefinition'GD_Itempools.ListDefs.StandardEnemyGunsAndGear'

                    level DahlFactory_Boss set GD_ProtoWarBot_CoreBody.Character.AIDef_ProtoWarBot_CoreBody:AIBehaviorProviderDefinition_0.Behavior_SpawnItems_11 ItemPoolIncludedLists (ItemPoolListDefinition'GD_Itempools.ListDefs.SuperBadassEnemyGunsAndGear')

                    # I believe these next two are the same thing, but for playthrough 2+

                    level DahlFactory_Boss set GD_ProtoWarBot_CoreBody.Character.AIDef_ProtoWarBot_CoreBody:AIBehaviorProviderDefinition_0.Behavior_SpawnItems_20 ItemPoolIncludedLists[0] ItemPoolListDefinition'GD_Itempools.ListDefs.StandardEnemyGunsAndGear'

                    level DahlFactory_Boss set GD_ProtoWarBot_CoreBody.Character.AIDef_ProtoWarBot_CoreBody:AIBehaviorProviderDefinition_0.Behavior_SpawnItems_21 ItemPoolIncludedLists (ItemPoolListDefinition'GD_Itempools.ListDefs.SuperBadassEnemyGunsAndGear')

                #</Felicity Rampant>

                #<The Sentinel (non-raid)>

                    # The Sentinel drops twice from the UltimateBadass pool by default,
                    # which is pretty excessive when paired with the Empyrian Sentinel
                    # drops as well.  Reduce it to only drop once.

                    level InnerCore_P set GD_Population_FinalBossCork.Balance.PawnBalance_FinalBossCork DefaultItemPoolIncludedLists
                    (
                        ItemPoolListDefinition'GD_Itempools.ListDefs.UltimateBadassEnemyGunsAndGear'
                    )

                #</The Sentinel (non-raid)>

                #<The Empyrean Sentinel (non-raid)>

                    # By default, the Empyrean Sentinel (non-raid version) drops three
                    # times from UltimateBadass and twice from RaidBoss (plus some drops
                    # from a number of custom drop pools).  We're leaving the custom
                    # drop pool rates alone, but we're going to change the otehr drop
                    # rates to: 2x Regular Badass, 2x Super Badass, 1x Ultimate.

                    level InnerCore_P set GD_FinalBossCorkBig.IOs.IO_LootSpew:BehaviorProviderDefinition_0.Behavior_SpawnItems_81 ItemPoolIncludedLists[0] ItemPoolListDefinition'GD_Itempools.ListDefs.BadassEnemyGunsAndGear'

                    level InnerCore_P set GD_FinalBossCorkBig.IOs.IO_LootSpew:BehaviorProviderDefinition_0.Behavior_SpawnItems_84 ItemPoolIncludedLists[0] ItemPoolListDefinition'GD_Itempools.ListDefs.SuperBadassEnemyGunsAndGear'

                    level InnerCore_P set GD_FinalBossCorkBig.IOs.IO_LootSpew:BehaviorProviderDefinition_0.Behavior_SpawnItems_86 ItemPoolIncludedLists[0] ItemPoolListDefinition'GD_Itempools.ListDefs.SuperBadassEnemyGunsAndGear'

                #</The Empyrean Sentinel (non-raid)>

                #<The Empyrean Sentinel (raid)>

                    # By deafult, the Empyrean Sentinel (raid version) drops twice from
                    # the UltimateBadass pool and once from RaidBoss.  This actually
                    # requires less nerfing than the non-raid version; we're just going
                    # to change one of the Ultimate drops to Super, and restrict the
                    # number of unique-pool drops to 2.

                    level InnerCore_P set GD_FinalBossCorkBig.IOs.IO_LootSpew:BehaviorProviderDefinition_0.Behavior_SpawnItems_83 ItemPoolIncludedLists[0] ItemPoolListDefinition'GD_Itempools.ListDefs.SuperBadassEnemyGunsAndGear'

                    level InnerCore_P set GD_FinalBossCorkBig.IOs.IO_LootSpew:BehaviorProviderDefinition_0.Behavior_SpawnItems_88 ItemPoolList
                    (
                        ( 
                            ItemPool=ItemPoolDefinition'GD_Itempools.Runnables.Pool_ColZarpedon', 
                            PoolProbability=( 
                                BaseValueConstant=0.000000, 
                                BaseValueAttribute=AttributeDefinition'GD_Itempools.DropWeights.DropODDS_BossUniques', 
                                InitializationDefinition=None, 
                                BaseValueScaleConstant=1.000000 
                            ) 
                        )
                    )

                #</The Empyrean Sentinel (raid)>

            #</Bosses>

            #<Non-Boss Enemies>

                # Some enemies in TPS use the main "Boss Uniques" and "Boss Unique Rares"
                # probabilities for a chance to drop legendary loot.  That might be okay,
                # given the usual Boss Uniques constants, but since we buff those in this mod,
                # these enemies start dropping loot way too much.  So, these are actually some
                # nerfs to bring those probabilities back down to a reasonable level.

                #<Badass Kraggons>

                    level None set GD_Cork_Population_EleBeast.Balance.PawnBalance_ElementalSpitterBadass DefaultItemPoolList[0].PoolProbability
                    (
                        BaseValueConstant=0.100000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=1.000000 
                    )

                #</Badass Kraggons>

                #<Tork Dredgers>

                    level None set GD_Population_Tork.Balance.PawnBalance_TorkDredger DefaultItemPoolList[0].PoolProbability
                    (
                        BaseValueConstant=0.100000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=0.125000 
                    )

                #</Tork Dredgers>

                #<Guard.Clapdog>

                    # This one's slightly different - there's a duplicate pool definition, so
                    # we're disabling one of them entirely

                    level None set GD_Ma_Pop_ClaptrapForces.Balance.PawnBalance_ClapDawg DefaultItemPoolList[0].PoolProbability
                    (
                        BaseValueConstant=0.000000, 
                        BaseValueAttribute=None,
                        InitializationDefinition=None, 
                        BaseValueScaleConstant=0.000000 
                    )

                #</Guard.Clapdog>

            #</Non-Boss Enemies>

        #</Enemy Drop Nerfs>

    #</Better Enemy Drops>

    #<Remove Level-Based Loot Restrictions (superset of UCP 2.1)>

        # This should allow all loot to spawn at the very beginning of the game, including
        # all types of weapons, part types, elements, etc.  This is a superset of similar
        # functionality already present in UCP 2.1, though this does more than what UCP
        # does.  There is no conflict with having both enabled at the same time, though
        # UCP goes about it in a different way than we do here.

        #<Main Unlocks>

            # Note that we omit Gamestage_24 on purpose here, because that is used to
            # determine Weapon Slot SDU rewards during playthrough 1 in the main storyline.
            # Nothing else in the game uses 24, so we're leaving it.  

            set GD_Itempools.Scheduling.Gamestage_02:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_03:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_04:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_05:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_06:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_07:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_08:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_09:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_10:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_11:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_12:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_13:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_14:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_15:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_16:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_17:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_18:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_19:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_20:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_21:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_22:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.Gamestage_23:ConstantAttributeValueResolver_0 ConstantValue 1

        #</Main Unlocks>

        #<Class Mods>

            # Class mods apparently have a separate set of values to override.

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_01_Common:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_02_Uncommon:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_03_Rare:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_04_VeryRare:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_Itempools.Scheduling.LootSchedule_ClassMod_05_Legendary:ConstantAttributeValueResolver_0 ConstantValue 1

        #</Class Mods>

        #<Grenade Mods>

            # Grenade mods apparently have a separate set of values to override

            set GD_GrenadeMods.BalanceAttributes.MinGameStage_CorrosiveGrenade:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_GrenadeMods.BalanceAttributes.MinGameStage_Homing:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_GrenadeMods.BalanceAttributes.MinGameStage_IncendiaryGrenade:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_GrenadeMods.BalanceAttributes.MinGameStage_Longbow:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_GrenadeMods.BalanceAttributes.MinGameStage_Rubberized:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_GrenadeMods.BalanceAttributes.MinGameStage_ShockGrenade:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_GrenadeMods.BalanceAttributes.MinGameStage_SlagGrenade:ConstantAttributeValueResolver_0 ConstantValue 1

            set GD_GrenadeMods.BalanceAttributes.MinGameStage_Sticky:ConstantAttributeValueResolver_0 ConstantValue 1

            # These definitions could be done with "set" as with other stuff, but
            # it's actually a little more convenient to do 'em with hotfixes

            {mp:grenade_AreaEffect_0_0}

            {mp:grenade_AreaEffect_0_1}

            {mp:grenade_AreaEffect_0_2}

            {mp:grenade_AreaEffect_0_3}

            {mp:grenade_BouncingBetty_0_0}

            {mp:grenade_BouncingBetty_0_1}

            {mp:grenade_BouncingBetty_0_2}

            {mp:grenade_BouncingBetty_0_3}

            {mp:grenade_BouncingBetty_1_0}

            {mp:grenade_BouncingBetty_1_1}

            {mp:grenade_BouncingBetty_1_2}

            {mp:grenade_BouncingBetty_1_3}

            {mp:grenade_Mirv_0_0}

            {mp:grenade_Mirv_0_1}

            {mp:grenade_Mirv_0_2}

            {mp:grenade_Mirv_0_3}

            {mp:grenade_Mirv_1_0}

            {mp:grenade_Mirv_1_1}

            {mp:grenade_Mirv_1_2}

            {mp:grenade_Mirv_1_3}

            {mp:grenade_Singularity_0_0}

            {mp:grenade_Singularity_0_1}

            {mp:grenade_Singularity_0_2}

            {mp:grenade_Singularity_0_3}

            {mp:grenade_Transfusion_0_0}

            {mp:grenade_Transfusion_0_1}

            {mp:grenade_Transfusion_0_2}

            {mp:grenade_Transfusion_0_3}

        #</Grenade Mods>

        #<Rocket Ammo and Grenades in Early Game>

            # Lets rocket ammo and grenades be available in world drops and vending
            # machines right from the start of the game.  (Grenades already pop up
            # pretty early, actually, but this should get 'em right from level 1.)

            level None set GD_ItemGrades.Ammo_Shop.ItemGrade_AmmoShop_RocketLauncher Manufacturers[0].Grades[0].GameStageRequirement.MinGameStage 1

            level None set GD_ItemGrades.Ammo.ItemGrade_Ammo_RocketLauncher Manufacturers[0].Grades[0].GameStageRequirement.MinGameStage 1

            level None set GD_ItemGrades.Ammo_Shop.ItemGrade_AmmoShop_Grenade Manufacturers[0].Grades[0].GameStageRequirement.MinGameStage 1

            level None set GD_ItemGrades.Ammo.ItemGrade_Ammo_Grenade Manufacturers[0].Grades[0].GameStageRequirement.MinGameStage 1

        #</Rocket Ammo and Grenades in Early Game>

        #<Exhaustive Weapon/Item Part Unlocks>

            # This is an utterly absurd set of commands which sets every weapon/item part
            # to be able to spawn from the very beginning.  This is what will allow all
            # element types from the beginning game, and various COM parts, etc.
            # Realistically we'd only need a subset of these, but we include all fixes
            # for unique/legendary partlists as well.  These are all generated by some
            # code which reads from FilterTool's catalogued `obj dump` outputs.  Rather
            # than alter MinGameStageIndex itself, as we do on my BL2 Better Loot mod,
            # here we're editing the ConsolidatedAttributeInitData vars which drive those.

            {mp:part_unlock_0}

            {mp:part_unlock_1}

            {mp:part_unlock_2}

            {mp:part_unlock_3}

            {mp:part_unlock_4}

            {mp:part_unlock_5}

            {mp:part_unlock_6}

            {mp:part_unlock_7}

            {mp:part_unlock_8}

            {mp:part_unlock_9}

            {mp:part_unlock_10}

            {mp:part_unlock_11}

            {mp:part_unlock_12}

            {mp:part_unlock_13}

            {mp:part_unlock_14}

            {mp:part_unlock_15}

            {mp:part_unlock_16}

            {mp:part_unlock_17}

            {mp:part_unlock_18}

            {mp:part_unlock_19}

            {mp:part_unlock_20}

            {mp:part_unlock_21}

            {mp:part_unlock_22}

            {mp:part_unlock_23}

            {mp:part_unlock_24}

            {mp:part_unlock_25}

            {mp:part_unlock_26}

            {mp:part_unlock_27}

            {mp:part_unlock_28}

            {mp:part_unlock_29}

            {mp:part_unlock_30}

            {mp:part_unlock_31}

            {mp:part_unlock_32}

            {mp:part_unlock_33}

            {mp:part_unlock_34}

            {mp:part_unlock_35}

            {mp:part_unlock_36}

            {mp:part_unlock_37}

            {mp:part_unlock_38}

            {mp:part_unlock_39}

            {mp:part_unlock_40}

            {mp:part_unlock_41}

            {mp:part_unlock_42}

            {mp:part_unlock_43}

            {mp:part_unlock_44}

            {mp:part_unlock_45}

            {mp:part_unlock_46}

            {mp:part_unlock_47}

            {mp:part_unlock_48}

            {mp:part_unlock_49}

            {mp:part_unlock_50}

            {mp:part_unlock_51}

            {mp:part_unlock_52}

            {mp:part_unlock_53}

            {mp:part_unlock_54}

            {mp:part_unlock_55}

            {mp:part_unlock_56}

            {mp:part_unlock_57}

            {mp:part_unlock_58}

            {mp:part_unlock_59}

            {mp:part_unlock_60}

            {mp:part_unlock_61}

            {mp:part_unlock_62}

            {mp:part_unlock_63}

            {mp:part_unlock_64}

            {mp:part_unlock_65}

            {mp:part_unlock_66}

            {mp:part_unlock_67}

            {mp:part_unlock_68}

            {mp:part_unlock_69}

            {mp:part_unlock_70}

            {mp:part_unlock_71}

            {mp:part_unlock_72}

            {mp:part_unlock_73}

            {mp:part_unlock_74}

            {mp:part_unlock_75}

            {mp:part_unlock_76}

            {mp:part_unlock_77}

            {mp:part_unlock_78}

            {mp:part_unlock_79}

            {mp:part_unlock_80}

            {mp:part_unlock_81}

            {mp:part_unlock_82}

            {mp:part_unlock_83}

            {mp:part_unlock_84}

            {mp:part_unlock_85}

            {mp:part_unlock_86}

            {mp:part_unlock_87}

            {mp:part_unlock_88}

            {mp:part_unlock_89}

            {mp:part_unlock_90}

            {mp:part_unlock_91}

            {mp:part_unlock_92}

            {mp:part_unlock_93}

            {mp:part_unlock_94}

            {mp:part_unlock_95}

            {mp:part_unlock_96}

            {mp:part_unlock_97}

            {mp:part_unlock_98}

            {mp:part_unlock_99}

            {mp:part_unlock_100}

            {mp:part_unlock_101}

            {mp:part_unlock_102}

            {mp:part_unlock_103}

            {mp:part_unlock_104}

            {mp:part_unlock_105}

            {mp:part_unlock_106}

            {mp:part_unlock_107}

            {mp:part_unlock_108}

            {mp:part_unlock_109}

            {mp:part_unlock_110}

            {mp:part_unlock_111}

            {mp:part_unlock_112}

            {mp:part_unlock_113}

            {mp:part_unlock_114}

            {mp:part_unlock_115}

            {mp:part_unlock_116}

            {mp:part_unlock_117}

            {mp:part_unlock_118}

            {mp:part_unlock_119}

            {mp:part_unlock_120}

            {mp:part_unlock_121}

            {mp:part_unlock_122}

            {mp:part_unlock_123}

            {mp:part_unlock_124}

            {mp:part_unlock_125}

            {mp:part_unlock_126}

            {mp:part_unlock_127}

            {mp:part_unlock_128}

            {mp:part_unlock_129}

            {mp:part_unlock_130}

            {mp:part_unlock_131}

            {mp:part_unlock_132}

            {mp:part_unlock_133}

            {mp:part_unlock_134}

            {mp:part_unlock_135}

            {mp:part_unlock_136}

            {mp:part_unlock_137}

            {mp:part_unlock_138}

            {mp:part_unlock_139}

            {mp:part_unlock_140}

            {mp:part_unlock_141}

            {mp:part_unlock_142}

            {mp:part_unlock_143}

            {mp:part_unlock_144}

            {mp:part_unlock_145}

            {mp:part_unlock_146}

            {mp:part_unlock_147}

            {mp:part_unlock_148}

            {mp:part_unlock_149}

            {mp:part_unlock_150}

            {mp:part_unlock_151}

            {mp:part_unlock_152}

            {mp:part_unlock_153}

            {mp:part_unlock_154}

            {mp:part_unlock_155}

            {mp:part_unlock_156}

            {mp:part_unlock_157}

            {mp:part_unlock_158}

            {mp:part_unlock_159}

            {mp:part_unlock_160}

            {mp:part_unlock_161}

            {mp:part_unlock_162}

            {mp:part_unlock_163}

            {mp:part_unlock_164}

            {mp:part_unlock_165}

            {mp:part_unlock_166}

            {mp:part_unlock_167}

            {mp:part_unlock_168}

            {mp:part_unlock_169}

            {mp:part_unlock_170}

            {mp:part_unlock_171}

            {mp:part_unlock_172}

            {mp:part_unlock_173}

            {mp:part_unlock_174}

            {mp:part_unlock_175}

            {mp:part_unlock_176}

            {mp:part_unlock_177}

            {mp:part_unlock_178}

            {mp:part_unlock_179}

            {mp:part_unlock_180}

            {mp:part_unlock_181}

            {mp:part_unlock_182}

            {mp:part_unlock_183}

            {mp:part_unlock_184}

            {mp:part_unlock_185}

            {mp:part_unlock_186}

            {mp:part_unlock_187}

            {mp:part_unlock_188}

            {mp:part_unlock_189}

            {mp:part_unlock_190}

            {mp:part_unlock_191}

            {mp:part_unlock_192}

            {mp:part_unlock_193}

            {mp:part_unlock_194}

            {mp:part_unlock_195}

            {mp:part_unlock_196}

            {mp:part_unlock_197}

            {mp:part_unlock_198}

            {mp:part_unlock_199}

            {mp:part_unlock_200}

            {mp:part_unlock_201}

            {mp:part_unlock_202}

            {mp:part_unlock_203}

            {mp:part_unlock_204}

            {mp:part_unlock_205}

            {mp:part_unlock_206}

            {mp:part_unlock_207}

            {mp:part_unlock_208}

            {mp:part_unlock_209}

            {mp:part_unlock_210}

            {mp:part_unlock_211}

            {mp:part_unlock_212}

            {mp:part_unlock_213}

            {mp:part_unlock_214}

            {mp:part_unlock_215}

            {mp:part_unlock_216}

            {mp:part_unlock_217}

            {mp:part_unlock_218}

            {mp:part_unlock_219}

            {mp:part_unlock_220}

            {mp:part_unlock_221}

            {mp:part_unlock_222}

            {mp:part_unlock_223}

            {mp:part_unlock_224}

            {mp:part_unlock_225}

            {mp:part_unlock_226}

            {mp:part_unlock_227}

            {mp:part_unlock_228}

            {mp:part_unlock_229}

            {mp:part_unlock_230}

            {mp:part_unlock_231}

            {mp:part_unlock_232}

            {mp:part_unlock_233}

            {mp:part_unlock_234}

            {mp:part_unlock_235}

            {mp:part_unlock_236}

            {mp:part_unlock_237}

            {mp:part_unlock_238}

            {mp:part_unlock_239}

            {mp:part_unlock_240}

            {mp:part_unlock_241}

            {mp:part_unlock_242}

            {mp:part_unlock_243}

            {mp:part_unlock_244}

            {mp:part_unlock_245}

            {mp:part_unlock_246}

            {mp:part_unlock_247}

            {mp:part_unlock_248}

            {mp:part_unlock_249}

            {mp:part_unlock_250}

            {mp:part_unlock_251}

            {mp:part_unlock_252}

            {mp:part_unlock_253}

            {mp:part_unlock_254}

            {mp:part_unlock_255}

            {mp:part_unlock_256}

            {mp:part_unlock_257}

            {mp:part_unlock_258}

            {mp:part_unlock_259}

            {mp:part_unlock_260}

            {mp:part_unlock_261}

            {mp:part_unlock_262}

            {mp:part_unlock_263}

            {mp:part_unlock_264}

            {mp:part_unlock_265}

            {mp:part_unlock_266}

            {mp:part_unlock_267}

            {mp:part_unlock_268}

            {mp:part_unlock_269}

            {mp:part_unlock_270}

            {mp:part_unlock_271}

            {mp:part_unlock_272}

            {mp:part_unlock_273}

            {mp:part_unlock_274}

            {mp:part_unlock_275}

            {mp:part_unlock_276}

            {mp:part_unlock_277}

            {mp:part_unlock_278}

            {mp:part_unlock_279}

            {mp:part_unlock_280}

            {mp:part_unlock_281}

            {mp:part_unlock_282}

            {mp:part_unlock_283}

            {mp:part_unlock_284}

            {mp:part_unlock_285}

            {mp:part_unlock_286}

            {mp:part_unlock_287}

            {mp:part_unlock_288}

            {mp:part_unlock_289}

            {mp:part_unlock_290}

            {mp:part_unlock_291}

            {mp:part_unlock_292}

            {mp:part_unlock_293}

            {mp:part_unlock_294}

            {mp:part_unlock_295}

            {mp:part_unlock_296}

            {mp:part_unlock_297}

            {mp:part_unlock_298}

            {mp:part_unlock_299}

            {mp:part_unlock_300}

            {mp:part_unlock_301}

            {mp:part_unlock_302}

            {mp:part_unlock_303}

            {mp:part_unlock_304}

            {mp:part_unlock_305}

            {mp:part_unlock_306}

            {mp:part_unlock_307}

            {mp:part_unlock_308}

            {mp:part_unlock_309}

            {mp:part_unlock_310}

            {mp:part_unlock_311}

            {mp:part_unlock_312}

            {mp:part_unlock_313}

            {mp:part_unlock_314}

            {mp:part_unlock_315}

            {mp:part_unlock_316}

            {mp:part_unlock_317}

            {mp:part_unlock_318}

            {mp:part_unlock_319}

            {mp:part_unlock_320}

            {mp:part_unlock_321}

            {mp:part_unlock_322}

            {mp:part_unlock_323}

            {mp:part_unlock_324}

            {mp:part_unlock_325}

            {mp:part_unlock_326}

            {mp:part_unlock_327}

            {mp:part_unlock_328}

            {mp:part_unlock_329}

            {mp:part_unlock_330}

            {mp:part_unlock_331}

            {mp:part_unlock_332}

            {mp:part_unlock_333}

            {mp:part_unlock_334}

            {mp:part_unlock_335}

            {mp:part_unlock_336}

            {mp:part_unlock_337}

            {mp:part_unlock_338}

            {mp:part_unlock_339}

            {mp:part_unlock_340}

            {mp:part_unlock_341}

            {mp:part_unlock_342}

            {mp:part_unlock_343}

            {mp:part_unlock_344}

            {mp:part_unlock_345}

            {mp:part_unlock_346}

            {mp:part_unlock_347}

            {mp:part_unlock_348}

            {mp:part_unlock_349}

            {mp:part_unlock_350}

            {mp:part_unlock_351}

            {mp:part_unlock_352}

            {mp:part_unlock_353}

            {mp:part_unlock_354}

            {mp:part_unlock_355}

            {mp:part_unlock_356}

            {mp:part_unlock_357}

            {mp:part_unlock_358}

            {mp:part_unlock_359}

            {mp:part_unlock_360}

            {mp:part_unlock_361}

            {mp:part_unlock_362}

            {mp:part_unlock_363}

            {mp:part_unlock_364}

            {mp:part_unlock_365}

            {mp:part_unlock_366}

            {mp:part_unlock_367}

            {mp:part_unlock_368}

            {mp:part_unlock_369}

            {mp:part_unlock_370}

            {mp:part_unlock_371}

            {mp:part_unlock_372}

            {mp:part_unlock_373}

            {mp:part_unlock_374}

            {mp:part_unlock_375}

            {mp:part_unlock_376}

            {mp:part_unlock_377}

            {mp:part_unlock_378}

            {mp:part_unlock_379}

            {mp:part_unlock_380}

            {mp:part_unlock_381}

            {mp:part_unlock_382}

            {mp:part_unlock_383}

            {mp:part_unlock_384}

            {mp:part_unlock_385}

            {mp:part_unlock_386}

            {mp:part_unlock_387}

            {mp:part_unlock_388}

            {mp:part_unlock_389}

            {mp:part_unlock_390}

            {mp:part_unlock_391}

            {mp:part_unlock_392}

            {mp:part_unlock_393}

            {mp:part_unlock_394}

            {mp:part_unlock_395}

            {mp:part_unlock_396}

            {mp:part_unlock_397}

            {mp:part_unlock_398}

            {mp:part_unlock_399}

            {mp:part_unlock_400}

            {mp:part_unlock_401}

            {mp:part_unlock_402}

            {mp:part_unlock_403}

            {mp:part_unlock_404}

            {mp:part_unlock_405}

            {mp:part_unlock_406}

            {mp:part_unlock_407}

            {mp:part_unlock_408}

            {mp:part_unlock_409}

            {mp:part_unlock_410}

            {mp:part_unlock_411}

            {mp:part_unlock_412}

            {mp:part_unlock_413}

            {mp:part_unlock_414}

            {mp:part_unlock_415}

            {mp:part_unlock_416}

            {mp:part_unlock_417}

            {mp:part_unlock_418}

            {mp:part_unlock_419}

            {mp:part_unlock_420}

            {mp:part_unlock_421}

            {mp:part_unlock_422}

            {mp:part_unlock_423}

            {mp:part_unlock_424}

            {mp:part_unlock_425}

            {mp:part_unlock_426}

            {mp:part_unlock_427}

            {mp:part_unlock_428}

            {mp:part_unlock_429}

            {mp:part_unlock_430}

            {mp:part_unlock_431}

            {mp:part_unlock_432}

            {mp:part_unlock_433}

            {mp:part_unlock_434}

            {mp:part_unlock_435}

            {mp:part_unlock_436}

            {mp:part_unlock_437}

            {mp:part_unlock_438}

            {mp:part_unlock_439}

            {mp:part_unlock_440}

            {mp:part_unlock_441}

            {mp:part_unlock_442}

            {mp:part_unlock_443}

            {mp:part_unlock_444}

            {mp:part_unlock_445}

            {mp:part_unlock_446}

            {mp:part_unlock_447}

            {mp:part_unlock_448}

            {mp:part_unlock_449}

            {mp:part_unlock_450}

            {mp:part_unlock_451}

            {mp:part_unlock_452}

            {mp:part_unlock_453}

            {mp:part_unlock_454}

            {mp:part_unlock_455}

            {mp:part_unlock_456}

            {mp:part_unlock_457}

            {mp:part_unlock_458}

            {mp:part_unlock_459}

            {mp:part_unlock_460}

            {mp:part_unlock_461}

            {mp:part_unlock_462}

            {mp:part_unlock_463}

            {mp:part_unlock_464}

            {mp:part_unlock_465}

            {mp:part_unlock_466}

            {mp:part_unlock_467}

            {mp:part_unlock_468}

            {mp:part_unlock_469}

            {mp:part_unlock_470}

            {mp:part_unlock_471}

            {mp:part_unlock_472}

            {mp:part_unlock_473}

            {mp:part_unlock_474}

            {mp:part_unlock_475}

            {mp:part_unlock_476}

            {mp:part_unlock_477}

            {mp:part_unlock_478}

            {mp:part_unlock_479}

            {mp:part_unlock_480}

            {mp:part_unlock_481}

            {mp:part_unlock_482}

            {mp:part_unlock_483}

            {mp:part_unlock_484}

            {mp:part_unlock_485}

            {mp:part_unlock_486}

            {mp:part_unlock_487}

            {mp:part_unlock_488}

            {mp:part_unlock_489}

            {mp:part_unlock_490}

            {mp:part_unlock_491}

            {mp:part_unlock_492}

            {mp:part_unlock_493}

            {mp:part_unlock_494}

            {mp:part_unlock_495}

            {mp:part_unlock_496}

            {mp:part_unlock_497}

            {mp:part_unlock_498}

            {mp:part_unlock_499}

            {mp:part_unlock_500}

            {mp:part_unlock_501}

            {mp:part_unlock_502}

            {mp:part_unlock_503}

            {mp:part_unlock_504}

            {mp:part_unlock_505}

            {mp:part_unlock_506}

            {mp:part_unlock_507}

            {mp:part_unlock_508}

            {mp:part_unlock_509}

            {mp:part_unlock_510}

            {mp:part_unlock_511}

            {mp:part_unlock_512}

            {mp:part_unlock_513}

            {mp:part_unlock_514}

            {mp:part_unlock_515}

            {mp:part_unlock_516}

            {mp:part_unlock_517}

            {mp:part_unlock_518}

            {mp:part_unlock_519}

            {mp:part_unlock_520}

            {mp:part_unlock_521}

            {mp:part_unlock_522}

            {mp:part_unlock_523}

            {mp:part_unlock_524}

            {mp:part_unlock_525}

            {mp:part_unlock_526}

            {mp:part_unlock_527}

            {mp:part_unlock_528}

            {mp:part_unlock_529}

            {mp:part_unlock_530}

            {mp:part_unlock_531}

            {mp:part_unlock_532}

            {mp:part_unlock_533}

            {mp:part_unlock_534}

            {mp:part_unlock_535}

            {mp:part_unlock_536}

            {mp:part_unlock_537}

            {mp:part_unlock_538}

            {mp:part_unlock_539}

            {mp:part_unlock_540}

            {mp:part_unlock_541}

            {mp:part_unlock_542}

            {mp:part_unlock_543}

            {mp:part_unlock_544}

            {mp:part_unlock_545}

            {mp:part_unlock_546}

            {mp:part_unlock_547}

            {mp:part_unlock_548}

            {mp:part_unlock_549}

            {mp:part_unlock_550}

            {mp:part_unlock_551}

            {mp:part_unlock_552}

            {mp:part_unlock_553}

            {mp:part_unlock_554}

            {mp:part_unlock_555}

            {mp:part_unlock_556}

            {mp:part_unlock_557}

            {mp:part_unlock_558}

            {mp:part_unlock_559}

            {mp:part_unlock_560}

            {mp:part_unlock_561}

            {mp:part_unlock_562}

            {mp:part_unlock_563}

            {mp:part_unlock_564}

            {mp:part_unlock_565}

            {mp:part_unlock_566}

            {mp:part_unlock_567}

            {mp:part_unlock_568}

            {mp:part_unlock_569}

            {mp:part_unlock_570}

            {mp:part_unlock_571}

            {mp:part_unlock_572}

            {mp:part_unlock_573}

            {mp:part_unlock_574}

            {mp:part_unlock_575}

            {mp:part_unlock_576}

            {mp:part_unlock_577}

            {mp:part_unlock_578}

            {mp:part_unlock_579}

            {mp:part_unlock_580}

            {mp:part_unlock_581}

            {mp:part_unlock_582}

            {mp:part_unlock_583}

            {mp:part_unlock_584}

            {mp:part_unlock_585}

            {mp:part_unlock_586}

            {mp:part_unlock_587}

            {mp:part_unlock_588}

            {mp:part_unlock_589}

            {mp:part_unlock_590}

            {mp:part_unlock_591}

            {mp:part_unlock_592}

            {mp:part_unlock_593}

            {mp:part_unlock_594}

            {mp:part_unlock_595}

            {mp:part_unlock_596}

            {mp:part_unlock_597}

            {mp:part_unlock_598}

            {mp:part_unlock_599}

            {mp:part_unlock_600}

            {mp:part_unlock_601}

            {mp:part_unlock_602}

            {mp:part_unlock_603}

            {mp:part_unlock_604}

            {mp:part_unlock_605}

            {mp:part_unlock_606}

            {mp:part_unlock_607}

            {mp:part_unlock_608}

            {mp:part_unlock_609}

            {mp:part_unlock_610}

            {mp:part_unlock_611}

            {mp:part_unlock_612}

            {mp:part_unlock_613}

            {mp:part_unlock_614}

            {mp:part_unlock_615}

            {mp:part_unlock_616}

            {mp:part_unlock_617}

            {mp:part_unlock_618}

            {mp:part_unlock_619}

            {mp:part_unlock_620}

            {mp:part_unlock_621}

            {mp:part_unlock_622}

            {mp:part_unlock_623}

            {mp:part_unlock_624}

            {mp:part_unlock_625}

            {mp:part_unlock_626}

            {mp:part_unlock_627}

            {mp:part_unlock_628}

            {mp:part_unlock_629}

            {mp:part_unlock_630}

            {mp:part_unlock_631}

            {mp:part_unlock_632}

            {mp:part_unlock_633}

            {mp:part_unlock_634}

            {mp:part_unlock_635}

            {mp:part_unlock_636}

            {mp:part_unlock_637}

            {mp:part_unlock_638}

            {mp:part_unlock_639}

            {mp:part_unlock_640}

            {mp:part_unlock_641}

            {mp:part_unlock_642}

            {mp:part_unlock_643}

            {mp:part_unlock_644}

            {mp:part_unlock_645}

            {mp:part_unlock_646}

            {mp:part_unlock_647}

            {mp:part_unlock_648}

            {mp:part_unlock_649}

            {mp:part_unlock_650}

            {mp:part_unlock_651}

            {mp:part_unlock_652}

            {mp:part_unlock_653}

            {mp:part_unlock_654}

            {mp:part_unlock_655}

            {mp:part_unlock_656}

            {mp:part_unlock_657}

            {mp:part_unlock_658}

            {mp:part_unlock_659}

            {mp:part_unlock_660}

            {mp:part_unlock_661}

            {mp:part_unlock_662}

            {mp:part_unlock_663}

            {mp:part_unlock_664}

            {mp:part_unlock_665}

            {mp:part_unlock_666}

            {mp:part_unlock_667}

            {mp:part_unlock_668}

            {mp:part_unlock_669}

            {mp:part_unlock_670}

            {mp:part_unlock_671}

            {mp:part_unlock_672}

            {mp:part_unlock_673}

            {mp:part_unlock_674}

            {mp:part_unlock_675}

            {mp:part_unlock_676}

            {mp:part_unlock_677}

            {mp:part_unlock_678}

            {mp:part_unlock_679}

            {mp:part_unlock_680}

            {mp:part_unlock_681}

            {mp:part_unlock_682}

            {mp:part_unlock_683}

            {mp:part_unlock_684}

            {mp:part_unlock_685}

            {mp:part_unlock_686}

            {mp:part_unlock_687}

            {mp:part_unlock_688}

            {mp:part_unlock_689}

            {mp:part_unlock_690}

            {mp:part_unlock_691}

            {mp:part_unlock_692}

            {mp:part_unlock_693}

            {mp:part_unlock_694}

            {mp:part_unlock_695}

            {mp:part_unlock_696}

            {mp:part_unlock_697}

            {mp:part_unlock_698}

            {mp:part_unlock_699}

            {mp:part_unlock_700}

            {mp:part_unlock_701}

            {mp:part_unlock_702}

            {mp:part_unlock_703}

            {mp:part_unlock_704}

            {mp:part_unlock_705}

            {mp:part_unlock_706}

            {mp:part_unlock_707}

            {mp:part_unlock_708}

            {mp:part_unlock_709}

            {mp:part_unlock_710}

            {mp:part_unlock_711}

            {mp:part_unlock_712}

            {mp:part_unlock_713}

            {mp:part_unlock_714}

            {mp:part_unlock_715}

            {mp:part_unlock_716}

            {mp:part_unlock_717}

            {mp:part_unlock_718}

            {mp:part_unlock_719}

            {mp:part_unlock_720}

            {mp:part_unlock_721}

            {mp:part_unlock_722}

            {mp:part_unlock_723}

            {mp:part_unlock_724}

            {mp:part_unlock_725}

            {mp:part_unlock_726}

            {mp:part_unlock_727}

            {mp:part_unlock_728}

            {mp:part_unlock_729}

            {mp:part_unlock_730}

            {mp:part_unlock_731}

            {mp:part_unlock_732}

            {mp:part_unlock_733}

            {mp:part_unlock_734}

            {mp:part_unlock_735}

            {mp:part_unlock_736}

            {mp:part_unlock_737}

            {mp:part_unlock_738}

            {mp:part_unlock_739}

        #</Exhaustive Weapon/Item Part Unlocks>

    #</Remove Level-Based Loot Restrictions (superset of UCP 2.1)>

    #<Provide Common Pistols for "To Arms!" mission (removes OzKit chests, disabled by default)>

        # The mission "To Arms!" was already rather annoying to begin with, but with this
        # mod enabled, it's actually one of the harder ones to complete, especially if
        # you're also using some vendor improvements.  Enabling this folder will cause a
        # few chests to appear in the same room as the dead drop, which always contain
        # common pistols.  It uses the previously-OzKit-only chests found near Deirdre
        # to do this, so those chests will no longer be ozkit chests if you have this
        # enabled.

        set GD_Itempools.ListDefs.AmmoCrateLoot_OzKitsOnly LootData
        (
            ( 
                ConfigurationName="AmmoCrate", 
                bIgnoreGameStageRestrictions=False, 
                LootGameStageVarianceFormula=None, 
                Weight=( 
                    BaseValueConstant=100.000000, 
                    BaseValueAttribute=None, 
                    InitializationDefinition=None, 
                    BaseValueScaleConstant=1.000000 
                ), 
                ItemAttachments=( 
                    ( 
                        ItemPool=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_01_Common', 
                        PoolProbability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None, 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        InvBalanceDefinition=None, 
                        AttachmentPointName="Ammo1" 
                    ), 
                    ( 
                        ItemPool=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_01_Common', 
                        PoolProbability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None, 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        InvBalanceDefinition=None, 
                        AttachmentPointName="Ammo2" 
                    ), 
                    ( 
                        ItemPool=ItemPoolDefinition'GD_Itempools.WeaponPools.Pool_Weapons_Pistols_01_Common', 
                        PoolProbability=( 
                            BaseValueConstant=1.000000, 
                            BaseValueAttribute=None, 
                            InitializationDefinition=None, 
                            BaseValueScaleConstant=1.000000 
                        ), 
                        InvBalanceDefinition=None, 
                        AttachmentPointName="Ammo3" 
                    ) 
                ) 
            )
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_31 PopulationDef PopulationDefinition'GD_Population_Treasure.Lootables.Crate_Military_OzKitsOnly'

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_31 Location
        (
            X=-8960,
            Y=10660,
            Z=-948.618042
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_31 Rotation
        (
            Pitch=45,
            Yaw=-33960,
            Roll=94
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_24 PopulationDef PopulationDefinition'GD_Population_Treasure.Lootables.Crate_Military_OzKitsOnly'

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_24 Location
        (
            X=-9160,
            Y=10630,
            Z=-948.618042
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_24 Rotation
        (
            Pitch=68, 
            Yaw=-30284, 
            Roll=77 
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_4 PopulationDef PopulationDefinition'GD_Population_Treasure.Lootables.Crate_Military_OzKitsOnly'

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_4 Location
        (
            X=-8493,
            Y=10731,
            Z=-948.618042
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_4 Rotation
        (
            Pitch=0, 
            Yaw=14931, 
            Roll=0 
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_146 PopulationDef PopulationDefinition'GD_Population_Treasure.Lootables.Crate_Military_OzKitsOnly'

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_146 Location
        (
            X=-8443,
            Y=10531,
            Z=-948.618042
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_146 Rotation
        (
            Pitch=0, 
            Yaw=17931, 
            Roll=0 
        )

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_85 PopulationDef PopulationDefinition'GD_Population_Treasure.Lootables.Crate_Military'

        level Moon_P set Moon_P.TheWorld:PersistentLevel.WillowPopulationOpportunityPoint_367 PopulationDef PopulationDefinition'GD_Population_Treasure.Lootables.Crate_Military'

    #</Provide Common Pistols for "To Arms!" mission (removes OzKit chests, disabled by default)>

#</{mod_name} ({config:profile_name} - {variant_name})>
